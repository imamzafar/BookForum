{"version":3,"sources":["components/Registration/Registration.js","components/Forum/ForumHome.js","components/Loginout/LoginPage.js","components/Loginout/LogoutPage.js","components/Search/Search.js","components/Footer/Footer.js","components/Navbar.js","components/Dashboard/Dashboard.js","components/Forum/WalkForm.js","components/Forum/TheWalks.js","components/Forum/Yapping.js","components/Forum/CoolPics.js","components/Posts/PostForm.js","components/Posts/CommentForm.js","components/Posts/CommentArray.js","components/Posts/EditCommentForm.js","components/Posts/EditPost.js","components/Posts/Posts.js","components/Admin/SearchForm.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Registration","useState","name","email","password","userData","setUserData","isRegistered","setIsRegistered","type","message","alertMessage","setAlertMessage","inputEmail","useRef","inputPassword","handleInputChange","e","target","id","value","registerUser","a","preventDefault","current","focus","test","length","localStorage","clear","fetch","method","headers","body","JSON","stringify","then","result","json","setTimeout","style","color","to","class","className","role","for","onChange","ref","onClick","ForumHome","useLocation","walkResult","setWalkResult","totalMessages","setTotalMessages","lastName","setLastName","lastUpdated","setLastUpdated","loadPage","apiGetWalk","console","log","forEach","element","createdAt","Date","toString","substring","updatedAt","total","userReply","user","useEffect","height","backgroundColor","padding","margin","paddingTop","paddingLeft","border","width","borderLeft","LoginPage","React","createContext","rememberMe","isLoggedIn","setIsLoggedIn","setImg","setName","loginUser","apiResult","img","setItem","points","error","checked","LogoutPage","isLoggedOut","setIsLoggedOut","logoutRequest","Search","Footer","Navbar","isShown","setShown","showClass","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dashboard","WalkForm","props","title","myThread","setMyThread","updateThread","newThread","handleSubmit","submitThread","url","newURL","trim","replace","walkData","data","slug","apiThread","alert","placeholder","cols","rows","TheWalks","showForm","setShowForm","alertFailure","msg","apiPoints","textAlign","background","boxShadow","map","event","key","_id","fontSize","pathname","info","pop","Yapping","CoolPics","PostForm","reply","myPost","setMyPost","submitForm","postData","postId","walkPost","userId","post","alertSuccess","CommentForm","comment","addReply","setAddReply","replyId","userComment","submitReply","idx","commentData","CommentArray","item","commenterName","postcomment","EditCommentForm","editReply","setEditReply","handleEditSubmit","editReplyData","edited","userEdit","EditPost","editPost","setEditPost","editPostData","postEdit","Posts","setWalkPost","replyForm","setReplyForm","editForm","setEditForm","replyResult","setReplyResult","numberReply","setNumberReply","setMyLike","myName","setMyName","pageStyle","mainPost","mainBtn","display","fontWeight","btn","params","useParams","location","apiGetWalkPost","apiGetReply","replyArray","likes","state","handleLike","deleteBtnPost","apiDeleteReply","handleDelete","apiDeletePost","window","addBtnReply","SearchForm","Admin","App","minHeight","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.540e757f.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Registration = () => {\r\n    const [ userData, setUserData ] = useState({ name: \"\", email: \"\", password: \"\"});\r\n    const [ isRegistered, setIsRegistered ] = useState( false );\r\n    const [ alertMessage, setAlertMessage ] = useState( { type: \"\", message: \"\"} );\r\n\r\n    const inputEmail = useRef();\r\n    const inputPassword = useRef();\r\n\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target; \r\n        setUserData( { ...userData, [id]: value } );\r\n    }\r\n\r\n    const registerUser = async(e) => {\r\n        e.preventDefault();\r\n        \r\n        if( userData.email === \"\" ) {\r\n            inputEmail.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide your Email!' } );\r\n            return;\r\n        }\r\n    \r\n        if( !(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) ) {\r\n            inputEmail.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide a valid Email!' } );\r\n            return;\r\n        }\r\n\r\n        if( userData.password === \"\" ) {\r\n            inputPassword.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide a password!' } );\r\n            return;\r\n        }\r\n\r\n        if( userData.password.length < 8 ) {\r\n            inputPassword.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide a longer password (8 characters min)!' } );\r\n            return;\r\n        }\r\n\r\n        localStorage.clear();\r\n\r\n        const apiResult = await fetch('/api/user/registration', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n          }).then( result=>result.json())       \r\n                  \r\n        if( apiResult.message ){\r\n            setAlertMessage( { type: 'success', message: 'Thank you successfully registered!' } );\r\n            setTimeout( function(){ setIsRegistered(true); }, 1000 );\r\n        } else {\r\n            setAlertMessage( { type: 'danger', message: 'Try again' } );\r\n        }\r\n        setUserData({ name: \"\", email: \"\", password: \"\"})\r\n    }\r\n\r\n    return (\r\n        <div style={{color: \"black\"}}>\r\n            \r\n            { isRegistered ? <Redirect to='/login' /> : '' }\r\n            <section class=\" text-center\">\r\n                <div class=\"container\">\r\n                    <h1>User Registration</h1>\r\n                    <p class=\"lead text-muted\">Register and enjoy your stay at forum!</p>\r\n                </div>\r\n            </section>\r\n            <div className={ alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide' } role=\"alert\">\r\n                {alertMessage.message}\r\n            </div>\r\n        \r\n            <div class=\"container\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                    Register\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <form role=\"form\">\r\n                            <input type='hidden' id='db_id' value='' />\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">First Name</label>\r\n                                <input value={userData.name} onChange={handleInputChange} id='name' type=\"text\" class=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"email\">Email Address</label>\r\n                                <input \r\n                                    value={userData.email} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputEmail}\r\n                                    id=\"email\" type=\"email\" class=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"userPassword\">Password</label>\r\n                                <input \r\n                                    value={userData.password} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputPassword}\r\n                                    id=\"password\" type=\"password\" class=\"form-control\" />\r\n                            </div>\r\n                            <button onClick={registerUser} class=\"btn btn-primary submit\" >Register</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import React, {useState, useEffect} from 'react';\r\n// import './Forum/style.css'\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nconst ForumHome = () => {\r\n    let location = useLocation();\r\n    const [ walkResult, setWalkResult ] = useState([])\r\n    const [ totalMessages, setTotalMessages ] = useState( '' )\r\n    const[ lastName, setLastName ] = useState ('')\r\n    const[ lastUpdated, setLastUpdated] = useState('')\r\n    // console.log(location)\r\n\r\n    const loadPage = async () => {\r\n        const apiGetWalk = await fetch('/api/walkdata').then( result => result.json() )\r\n        console.log('apigetwalk is', apiGetWalk)\r\n        if (apiGetWalk.length == 0){\r\n            setLastName('');\r\n            setLastUpdated('')\r\n        } else {\r\n                apiGetWalk.forEach(element => { \r\n                    element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n                    element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n                });\r\n                let total = 0;\r\n                apiGetWalk.forEach(element => { \r\n                    total = total + element.userReply.length;\r\n                });\r\n                setWalkResult( apiGetWalk);\r\n                setTotalMessages(total);\r\n                setLastName( apiGetWalk[0].user.name);\r\n                setLastUpdated( apiGetWalk[0].updatedAt)\r\n            }\r\n        \r\n\r\n        }\r\n        // console.log(walkResult)\r\n        \r\n        useEffect( function(){\r\n            loadPage();\r\n        }, [] );\r\n    \r\n    return (\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\r\n                </div>\r\n                <div class=\"col-lg-12 mx-auto\">\r\n                    <h2 class=\"my-4\">Welcome To The Poems Forum!</h2>\r\n                    <p>Emily Dickinson is one of America’s greatest and most original poets of all time.</p>\r\n                </div>\r\n                <div class=\"row ml-2 mt-4\">\r\n                    <div class=\"col-lg-10 mx-auto mt-4\">\r\n                        <div class=\"row py-2\"  style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\r\n                            <div class=\"col-lg-8 my-2\">\r\n                                    <div class=\"row my-auto\" >\r\n                                        <div class=\"col-lg-2 mt-4\">\r\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i> </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-10 mt-2\">\r\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Poems by Emily Dickinson</h3></Link>\r\n                                            <p class=\"ml-3\">Emily Dickinson is one of America’s greatest and most original poets of all time.</p>\r\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">{walkResult.length}</span><b>Messages</b><span class=\"px-2\">{totalMessages}</span></p>\r\n                                        </div>\r\n                                    </div>     \r\n                            </div>          \r\n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\r\n                                <div class=\"row my-auto\"   >\r\n                                    <div class=\"col-lg-12 ml-3 mt-4\">\r\n                                        <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                    <div class=\"col-lg-10 mx-auto\">\r\n                        <div class=\"row py-2\" style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\r\n                            <div class=\"col-lg-8 my-2\">\r\n                                    <div class=\"row my-auto\" >\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i> </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-10  mt-2\">\r\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Life of Emily Dickinson</h3></Link>\r\n                                            <p class=\"ml-3\">Emily Dickinson is one of America’s greatest and most original poets of all time. </p>\r\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">10</span><b>Messages</b><span class=\"px-2\">10</span></p>\r\n                                        </div>\r\n                                    </div>     \r\n                            </div>          \r\n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\r\n                                <div class=\"row my-auto\">\r\n                                    <div class=\"col-lg-12  ml-3 mt-4\">\r\n                                    <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                    <div class=\"col-lg-10 mx-auto\">\r\n                        <div class=\"row py-2\" style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\r\n                            <div class=\"col-lg-8 my-2\">\r\n                                    <div class=\"row my-auto\" >\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i></div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-10\">\r\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Movie</h3></Link>\r\n                                            <p class=\"ml-3\">Emily Dickinson is one of America’s greatest and most original poets of all time.</p>\r\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">10</span><b>Messages</b><span class=\"px-2\">10</span></p>\r\n                                        </div>\r\n                                    </div>     \r\n                            </div>          \r\n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\r\n                                <div class=\"row my-auto\">\r\n                                    <div class=\"col-lg-12  ml-3 mt-4\">\r\n                                    <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForumHome\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nexport const UserContext = React.createContext();\r\n\r\nconst LoginPage = () => {\r\n    // DECLARATIVE FORM OF PROGRAMMING\r\n    const [ userData, setUserData ] = useState({ name: \"\", email: localStorage.email, password: \"\", rememberMe: true });\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\r\n    const [ alertMessage, setAlertMessage ] = useState( { type: \"\", message: \"\"} );\r\n    const [ img, setImg ] = useState( '' );\r\n    const [ name, setName ] = useState( '' );\r\n\r\n    const inputEmail = useRef();\r\n    const inputPassword = useRef();\r\n\r\n    const handleInputChange = ( e ) => {\r\n        const { id, value } = e.target;\r\n        setUserData( { ...userData, [id]: value } );\r\n    }\r\n\r\n    const handleCheckbox = () => {\r\n        setUserData( { ...userData, rememberMe: !userData.rememberMe } );\r\n    }\r\n\r\n    const loginUser = async ( e ) => {\r\n        e.preventDefault();\r\n        setUserData({ name: \"\", email: localStorage.email, password: \"\", rememberMe: true })\r\n        \r\n        if( userData.email === \"\" ) {\r\n            inputEmail.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide your Email!' } );\r\n            return;\r\n        }\r\n    \r\n        if( userData.password === \"\" || userData.password.length < 8 ) {\r\n            inputPassword.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide your password!' } );\r\n            return;\r\n        }\r\n\r\n        const apiResult = await fetch('/api/user/login', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            }).then( result=>result.json())\r\n            // console.log(apiResult)\r\n            setImg(apiResult.img);  \r\n            setName(apiResult.name);  \r\n            localStorage.setItem(\"email\", apiResult.email);\r\n            localStorage.setItem('id', apiResult.id);\r\n            localStorage.setItem('name', apiResult.name);\r\n            localStorage.setItem('points', apiResult.points)\r\n            localStorage.setItem('type', apiResult.type)\r\n                  \r\n        if( !apiResult.message ){\r\n            setAlertMessage( { type: 'danger', message: apiResult.error } );\r\n            return;\r\n        };\r\n\r\n        setAlertMessage( { type: 'success', message: 'Loading, please wait...' } );\r\n        localStorage.email = ( apiResult.rememberMe ? apiResult.email : '' );\r\n        setTimeout( function(){ setIsLoggedIn(true); }, 1000 );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {/* <UserContext.Provider value ={{name, img}}>\r\n            <Router>\r\n                <Route exact path=\"/the-walks\" component={TheWalks} />\r\n            </Router>\r\n        </UserContext.Provider> */}\r\n        <div style={{color: \"black\"}}>\r\n            { isLoggedIn ? <Redirect to='/' /> : '' }\r\n\r\n            <div className={ alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide' } role=\"alert\">\r\n                {alertMessage.message}\r\n            </div>\r\n            <section class=\"text-center\">\r\n                <div class=\"container\">\r\n                    <h1>Login</h1>\r\n                    <p class=\"lead text-muted\">Welcome back!</p>\r\n                </div>\r\n            </section>\r\n        \r\n            <div class=\"container\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form role=\"form\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"userEmail\">Email Address</label>\r\n                                <input \r\n                                    value={userData.email} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputEmail}\r\n                                    id=\"email\" type=\"email\" class=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"userPassword\">Password</label>\r\n                                <input \r\n                                    value={userData.password} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputPassword}\r\n                                    id=\"password\" type=\"password\" class=\"form-control\" />\r\n                            </div>\r\n                            <button onClick={loginUser} type=\"button\" class=\"btn btn-primary submit\">Login</button>\r\n                            &nbsp; \r\n                            <input type=\"checkbox\" checked={userData.rememberMe} onChange={handleCheckbox} />                        \r\n                            <label class='text-secondary' for='rememberMe'>Remember Me</label> &nbsp;\r\n                            <Link to=\"/registration\">Need to Register?</Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst LogoutPage = () => {\r\n    const [ isLoggedOut, setIsLoggedOut ] = useState( false );\r\n\r\n    useEffect( function(){\r\n        // attempt to request logout (only once)\r\n        logoutRequest();\r\n    }, [] );\r\n\r\n    // call the api to logout (and clear session)\r\n    const logoutRequest = async() => {\r\n        localStorage.id = \"\";\r\n        localStorage.type = \"\";\r\n        if(localStorage.email == 'april@test.com'){\r\n            localStorage.email=\"\";\r\n        };\r\n        localStorage.points = \"\";\r\n        setTimeout( function(){ setIsLoggedOut(true); }, 1000 );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            { isLoggedOut ? <Redirect to='/login' /> : '' }\r\n            <section class=\"jumbotron text-center\">\r\n                <div class=\"container\">\r\n                    <p class=\"lead text-muted\">Please wait, logging out...</p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutPage;","import React from 'react'\r\n\r\nfunction Search() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState} from 'react'\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    const location = useLocation();\r\n    const [isShown, setShown] = useState(false);\r\n    let showClass = !isShown ? `collapse navbar-collapse`: `collapse navbar-collapse show`;\r\n\r\n    let id = localStorage.id\r\n    let userName = localStorage.name;\r\n    let email = localStorage.email;\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Emily <i class=\"fas fa-book-reader\"></i> Dickinson</Link>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onClick={()=>setShown(!isShown)}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                 <div className={showClass} id=\"navbarNav\"> \r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" >Home</Link>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link to=\"/forum\" className=\"nav-link\" href=\"#\">Forum</Link>\r\n                    </li> */}\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link to=\"/search\" className=\"nav-link\" href=\"#\">Search</Link>\r\n                    </li> */}\r\n                    { !localStorage.id ?\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/registration\" className=\"nav-link\" href=\"#\">Register</Link>\r\n                    </li> : ''}\r\n                    { email == \"april@test.com\" ?\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin\" className=\"nav-link\" href=\"#\">Admin</Link>\r\n                    </li> : ''}\r\n                    { !id ? \r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\" href=\"#\">Login</Link>\r\n                    </li> : \r\n                    <li className=\"nav-item\">\r\n                    <Link to={`/user/${id}`} className=\"nav-link\" href=\"#\">Dashboard</Link>\r\n                    </li>}    \r\n\r\n                    {id ? \r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/logout\" className=\"nav-link\" href=\"#\">Logout</Link>\r\n                    </li>: ''}                        \r\n            \r\n                    {/* <li className=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <span class=\"mr-1\"><i class=\"fas fa-user\"></i></span> {`${userName}`}\r\n                    </a>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <Link to={`/user/${id}`} className=\"nav-link\" href=\"#\">Dashboard</Link>\r\n                            <div class=\"dropdown-divider\"></div>\r\n                            <Link to=\"/logout\" className=\"nav-link\" href=\"#\">Logout</Link>\r\n                        </div>\r\n                    </li>} */}\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, useParams, useLocation, Redirect} from 'react-router-dom';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const [ userData, setUserData] = useState('');\r\n    const[ createdAt, setCreatedAt] = useState('');\r\n    const[ updatedAt, setUpdatedAt] = useState('');\r\n    const[ userPosts, setUserPosts] = useState([]);\r\n\r\n    let id = localStorage.id;\r\n\r\n    useEffect( function(){\r\n        loadPage();\r\n    }, [] );\r\n\r\n    // if(localStorage.id == ''){\r\n    //     return <Redirect to='/login' />\r\n    // }\r\n    return( localStorage.id == '' ? <Redirect to='/login' />: '')\r\n\r\n    const loadPage = async() => {\r\n        const apiUserData = await fetch(`/api/userdata/${id}`).then( result => result.json() )\r\n        \r\n            let created = new Date(apiUserData.createdAt).toString().substring(4, 15) \r\n             \r\n            let updated = new Date(apiUserData.updatedAt).toString().substring(4, 21) \r\n           \r\n        \r\n        setUserData(apiUserData);\r\n        setCreatedAt(created);\r\n        setUpdatedAt(updated);\r\n        setUserPosts(apiUserData.userThreadWalk)\r\n        localStorage.setItem(\"type\", apiUserData.userType)\r\n        localStorage.setItem(\"points\", apiUserData.points)\r\n        \r\n        // console.log(apiUserData)\r\n    }\r\n    // console.log(userData);\r\n    \r\n\r\n\r\n    return (\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Dashboard</h2>\r\n                </div>\r\n                \r\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\r\n                    <div class=\"row justify-content-center mt-4 p-4\" style={{boxShadow: \"5px 3px #9E9E9E\", border: \"1px solid #9f6934\"}}>\r\n                        <div class=\"col-lg-3 col-md-3 mt-2\">\r\n                            <img src={userData.img} style={{minHeight:'70px', height:'180px'}} class=\"img-thumbnail\"/>                        \r\n                        </div>\r\n                        <div class=\"col-lg-7 col-md-7 mt-2\" style={{padding: '0px' }}>\r\n                            <div class=\"row pl-4\">\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Name: </b> {userData.name}                               \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Email: </b> {userData.email}                        \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Points Earned: </b> {userData.points}   \r\n                                        { userData.points < 5 ? <p class=\"ml-2\">(Points should be atleast 5 to create a post)</p> : ''}                     \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                         {userData.points < 5 ? <div><b>Member Type: </b> NewBie</div> : <div><b>Member Type: </b> Member </div>}          \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Joined Date: </b>{createdAt}                     \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Last Active on: </b>{updatedAt}                      \r\n                                    </div>\r\n                            </div>  \r\n                        </div>\r\n                            \r\n\r\n                    </div>\r\n                </div>\r\n                {userPosts.length != 0 ? \r\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-md-12\">\r\n                            <h3>Your Posts</h3>\r\n                        </div>    \r\n                        {userPosts.map( element => <div class=\"col-lg-12\"><Link to={`/the-walks/${element.slug}/${element._id}`}>{element.title}</Link></div>)}\r\n                    </div>    \r\n                    \r\n                </div> :\r\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\r\n                    <div class=\"col-lg-12 col-md-12\">\r\n                        <h3>No Posts To Show</h3> \r\n                    </div> \r\n                </div>    }   \r\n            </div>  \r\n        </div>      \r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React,{useState} from 'react'\r\n\r\nconst WalkForm = (props) => {  \r\n    const [myThread, setMyThread] = useState( {title: \"\", message: \"\"});\r\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\r\n       \r\n    \r\n    const updateThread = (e) => {\r\n        e.preventDefault();\r\n       let id = e.target.id;\r\n\r\n    //    console.log(id)\r\n       let value = e.target.value;\r\n    //    console.log(value)\r\n       //spread the operator and insert the values\r\n        let newThread =  ({ ...myThread, [id] : value})\r\n        // console.log( newThread );\r\n      \r\n       setMyThread(newThread)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        props.submitThread(e)\r\n        let url = myThread.title\r\n        let newURL = url.trim().replace(/\\s/g , \"-\").replace(/\\'/g, \"\");\r\n\r\n        if (myThread.message != ''){\r\n        let walkData = {\r\n            id : localStorage.id,\r\n            data : myThread,\r\n            slug : newURL,\r\n            name: localStorage.name\r\n        }\r\n    \r\n        const apiThread = await fetch('/api/newthread', \r\n            {   method: 'post'\r\n            ,\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(walkData)\r\n          }).then( result=>result.json())   \r\n        \r\n          if(apiThread.message){\r\n              setAlertMessage({type: 'success', message: apiThread.message})\r\n              setTimeout( function(){ setAlertMessage( {} ); }, 1000 );\r\n          } else {\r\n            setAlertMessage({type: 'danger', message: apiThread.message})\r\n            setTimeout( function(){ setAlertMessage({}); }, 1000 );\r\n          }\r\n          props.loadPage();\r\n        } else {\r\n            alert( 'message is empty ')\r\n        }  \r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        props.submitThread(e) \r\n    }\r\n\r\n\r\n    return (\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class={ alertMessage.type ? `alert alert-${alertMessage.type}` : `d-hide`} role=\"alert\">\r\n                    {alertMessage.message}\r\n                </div>\r\n                <form>\r\n                    <textarea type=\"textarea\" name=\"\" id=\"title\" value={myThread.title} onChange={updateThread} placeholder=\"Title\" cols=\"100\" rows=\"1\" ></textarea><br/>\r\n                    <textarea type=\"textarea\" name=\"\" id=\"message\" value={myThread.message} onChange={updateThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\r\n                    \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Add</button>  \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WalkForm\r\n","import React, {useState, useEffect} from 'react'\r\nimport WalkForm from './WalkForm';\r\nimport { Link, useParams, useLocation} from 'react-router-dom';\r\n\r\n\r\nconst TheWalks = () => {\r\n    const location = useLocation();\r\n    const[showForm, setShowForm] = useState(false);\r\n    const [ walkResult, setWalkResult ] = useState([])\r\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\r\n   \r\n    \r\n    const submitThread = (e) => {\r\n        e.preventDefault();\r\n        setShowForm( false );\r\n    }\r\n\r\n   const alertSuccess = (msg) => {\r\n        setAlertMessage({type: 'success', message: msg})\r\n        setTimeout( function(){ setAlertMessage( {} ); }, 2000 );\r\n    }\r\n\r\n    //passing data from child to parent\r\n    const alertFailure = (msg) => {\r\n        setAlertMessage({type: 'danger', message: msg})\r\n        setTimeout( function(){ setAlertMessage({}); }, 2000 );\r\n    }\r\n\r\n    const loadPage = async () => {\r\n        const apiGetWalk = await fetch('/api/walkdata').then( result => result.json() )\r\n        // console.log(apiGetWalk)\r\n        apiGetWalk.forEach(element => { \r\n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n        });\r\n\r\n        // apiGetWalk.map( element => {\r\n        //     element.userReply = element.userReply.pop();\r\n        //     // console.log(lastReply)\r\n        // }); \r\n        // console.log(apiGetWalk[0].userReply[0])\r\n        // console.log(apiGetWalk[0].lastReply)\r\n\r\n        setWalkResult([...apiGetWalk])\r\n    }\r\n    // console.log(walkResult);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let id = localStorage.id;\r\n\r\n        if(localStorage.type == \"admin\"){\r\n            setShowForm( true );\r\n        } else if( !localStorage.id ) {\r\n            alertFailure('Dear guest, feel free to visit, to participate please register')\r\n        } else {\r\n                const apiPoints = await fetch(`/api/points/${id}`).then( result => result.json() )\r\n                // console.log(apiPoints);\r\n            \r\n                if( apiPoints >= 5){\r\n                    setShowForm( true );\r\n                }  else if(apiPoints < 5){\r\n                    alertFailure('Not Enough Points to Participate in the forum. Check your dashboard.')\r\n                } \r\n        }\r\n    }\r\n     \r\n    useEffect( function(){\r\n        loadPage();\r\n    }, [] );\r\n\r\n    // console.log(walkResult)\r\n    // console.log(walkResult._id)\r\n    return (\r\n\r\n        <div>\r\n  \r\n         <div style={{textAlign: \"center\"}}\r\n            class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\r\n            {alertMessage.message}\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\r\n                </div>\r\n                \r\n                    {/* <div class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\r\n                        {alertMessage.message}\r\n                    </div> */}\r\n               \r\n                <div class=\"col-lg-12 mx-auto\">\r\n                    <h2 class=\"my-4\">Poems by Emily Dickinson</h2>\r\n                    <p>Like most writers, Emily Dickinson wrote about what she knew and about what intrigued her. </p>\r\n                </div>\r\n                <div class=\"col-lg-10 mx-auto\">\r\n                    <div class=\"row mx-auto justify-content-end\">\r\n                        {/* <button onClick={function(){localStorage.points > 5 ? setShowForm(true) : setShowForm(false); alert('Not enough points to start a new thread')}}>New Thread</button> */}\r\n                        <button style={{background: '#90ee90', border: '3px solid #9f6934', padding: '10px 15px', boxShadow: '3px 3px #9E9E9E'}} onClick={handleSubmit}> <i class=\"fas fa-pen-nib\"></i> New Post</button><br/>\r\n                        {showForm ? <WalkForm submitThread ={submitThread} loadPage={loadPage}/> : ''}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 mx-auto justify-content-end\" style={{border:\"1px solid black\"}}></div>\r\n                        \r\n                    </div>    \r\n\r\n                </div>\r\n                <div class=\"col-lg-10 mx-auto mt-4\"  >                      \r\n                         <div>\r\n                        \r\n                            <table class=\"table table-sm\">\r\n                                <thead>\r\n                                    <tr style={{height: \"50px\", border: \"3px solid #9f6934\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\", color: \"white\"}}>\r\n                                        <th  style={{ width:\"10%\" }}></th>\r\n                                        <th  style={{ width:\"30%\" }}>Title</th>\r\n                                       \r\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Replies</th>\r\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Views</th>\r\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Last Activity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                { walkResult.length !== 0 ? walkResult.map( event => <tbody>\r\n                                    <tr style={{ height: '80px', border: \"3px solid #9f6934\" }}>\r\n                                        <td style={{padding: '20px 0 0 20px'}}><i class=\"fas fa-envelope-open-text fa-2x\"></i></td>\r\n                                        <td style={{padding: '10px 0 0 0'}} key={event._id}>\r\n                                            <div style={{fontSize: \"25px\"}}>\r\n                                                <Link to={{ pathname: `/the-walks/${event.slug}/${event._id}`,\r\n                                                                info:{id: event._id}                   \r\n                                                                }}> \r\n                                            <b>{event.title}</b> </Link><br/>\r\n                                            </div>\r\n                                            <div class=\"my-2\">\r\n                                                {event.user.name}<br/>\r\n                                                {event.createdAt}  \r\n                                            </div>\r\n                                        \r\n                                         </td>\r\n                                        \r\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>{event.userReply.length}</td>\r\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>10</td>\r\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>\r\n                                            {event.updatedAt}<br/>\r\n                                            {/* {event.userReply.map( el => el.name)}</td> */}\r\n                                            {function() \r\n                                                {event.userReply.pop();\r\n                                                return event.userReply[0].name; }}</td>\r\n                                    </tr>\r\n                                \r\n                                </tbody>) : ''}\r\n                            </table>\r\n                        </div>\r\n                </div>         \r\n            </div>\r\n        </div>\r\n     </div>      \r\n    )\r\n}\r\n\r\nexport default TheWalks\r\n","import React from 'react'\r\n\r\nfunction Yapping() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Yapping\r\n","import React from 'react'\r\n\r\nfunction CoolPics() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoolPics\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst PostForm = (props) => {\r\n    // console.log(props)\r\n    const[ myPost, setMyPost ] = useState( { reply:\"\"} )\r\n    \r\n        \r\n    const updatePost = (e) => {\r\n        e.preventDefault();\r\n        let post = { reply: e.target.value }\r\n        setMyPost(post)\r\n        // console.log(post);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {   \r\n        e.preventDefault();\r\n        props.submitForm(e);    \r\n        let userId = localStorage.id;\r\n\r\n        if( myPost.reply != ''){\r\n\r\n        let postData = {\r\n            name: localStorage.name,\r\n            postId: props.walkPost._id,\r\n            userId: localStorage.id,\r\n            post: myPost\r\n        }\r\n            \r\n        const apiReply = await fetch('/api/reply', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(postData)\r\n          }).then( result=>result.json()) ; \r\n        //   console.log(apiReply.message);\r\n         \r\n            if(apiReply.message){\r\n                props.alertSuccess('Thank You! Your reply posted sucessfully.');\r\n                \r\n            } else {\r\n                props.alertFailure('Try again! Failed to post the message');\r\n            \r\n            }\r\n          props.loadPage();\r\n        }\r\n        else{\r\n            props.alertFailure('Reply is empty');\r\n        }  \r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        props.submitForm(e);  \r\n    }\r\n    // function handleCancel(e){\r\n    //     e.preventDefault();\r\n    //     props.submitForm();\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            \r\n             <form class=\"mt-2\">\r\n                \r\n                <textarea type=\"textarea\" name=\"\" id=\"message\" value={myPost.reply} onChange={updatePost} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\r\n                \r\n                <button type=\"submit\" onClick={handleSubmit}>Submit</button>  \r\n                <button type=\"submit\" onClick={handleCancel}>Cancel</button>\r\n                {/* <button type=\"submit\" onClick={e => handleCancel}>Cancel</button>  */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n","import React, {useState} from 'react'\r\n\r\nconst CommentForm = (props) => {\r\n    const[ addReply, setAddReply] = useState({comment:''})\r\n    // console.log(props.reply)\r\n    // console.log(props.reply._id)\r\n    let replyId = props.reply._id;\r\n    let postId = props.reply.postId;\r\n    // console.log(replyId, postId)\r\n\r\n    const updateThread = async(e) => {\r\n        e.preventDefault();\r\n        let userComment = e.target.value;\r\n        // console.log(userComment);\r\n        setAddReply({comment: userComment})\r\n    }\r\n    // console.log(addReply);\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        props.submitReply(e, props.idx);\r\n\r\n        if( addReply.comment != ''){\r\n        let commentData = {\r\n            postId:postId,\r\n            userId:localStorage.id,\r\n            name: localStorage.name,\r\n            replyId: replyId,\r\n            comment: addReply.comment\r\n        }   \r\n\r\n    const apiReply = await fetch('/api/comment/', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(commentData)\r\n          }).then( result=>result.json())   \r\n        //   console.log(apiReply)\r\n        \r\n        if(apiReply.message){\r\n            props.alertSuccess('Thank You! Your comment posted sucessfully.');\r\n        }else {\r\n            props.alertFailure('Try again! Failed to post the message');   \r\n        }\r\n          //load page after the post submitted to db\r\n          props.loadPage();\r\n        }\r\n        else {\r\n            props.alertFailure('Try again! The comment form is empty')\r\n        }     \r\n    }\r\n    \r\n    const handleCancel = (e) => {\r\n        props.submitReply(e) \r\n    }\r\n\r\n    return (\r\n        \r\n        <div class=\"col-lg-12 mt-4\">\r\n            <div class=\"row justify-content-end\">\r\n                <form>\r\n                \r\n                    <textarea type=\"text\" name=\"\" id=\"message\" value={addReply.comment} onChange={updateThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\"></textarea><br/>\r\n                    \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Add</button> \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button> \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm\r\n","import React, {useState} from 'react'\r\n\r\nconst CommentArray = (props) => {\r\n    // const [ myArray, setMyArray] = useState('')\r\n    // let newComment = ( [{...props.comment}] )\r\n\r\n    // console.log(props)\r\n\r\n    return (\r\n        <div>\r\n            { props.comment.length !== 0 ? props.comment.map( item => <div class=\"row justify-content-end\" >\r\n            <div class=\"col-lg-12\" key={item._id} style={{border:'2px solid #9f6934'}}> \r\n                <div class=\"col-lg-12 my-2\">\r\n                    <div key={item._id}><b>{item.commenterName}</b></div>\r\n                    <div></div>\r\n                </div>\r\n                <div class=\"col-lg-12 mb-2\" key={item._id}>{item.postcomment}</div>\r\n            </div>\r\n            \r\n        </div>) : ''}\r\n\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default CommentArray\r\n","import React, {useState} from 'react'\r\n\r\n\r\nconst EditCommentForm = (props) => {\r\n    // console.log(props.reply)\r\n    const[ editReply, setEditReply ] = useState( {message: props.reply.message} )\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        let userEdit = e.target.value;\r\n        setEditReply( {message: userEdit} );\r\n\r\n    }\r\n    // console.log(editReply)\r\n    \r\n    const handleEditSubmit = async(e) =>{ \r\n        e.preventDefault();\r\n\r\n    let editReplyData = {\r\n            postId:props.reply.postId,\r\n            userId:props.reply.postId,\r\n            replyId:props.reply._id,\r\n            edited: editReply.message\r\n        } \r\n\r\n        const apiReply = await fetch('/api/editReply', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(editReplyData)\r\n          }).then( result=>result.json())   \r\n\r\n    props.submitReply(e)\r\n    props.loadPage();\r\n    }\r\n    \r\n    const handleEditCancel = (e) => {\r\n        props.submitReply(e)  \r\n    }\r\n\r\n    return (\r\n        <div class=\"col-lg-12 ml-2 mt-4\">\r\n            <div class=\"row\">\r\n                <form>\r\n                    <textarea type=\"text\" name=\"\" id=\"message\" value={editReply.message} onChange={handleEdit} placeholder=\"Your Message\" cols=\"100\" rows=\"5\"></textarea><br/>\r\n                    \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleEditSubmit}>submit</button> \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleEditCancel}>Cancel</button> \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCommentForm\r\n","import React, {useState} from 'react'\r\n\r\nconst EditPost = (props) => {\r\n    // console.log(props.walkPost)\r\n    const[ editPost, setEditPost ] = useState( {message:props.walkPost.message}  )\r\n\r\n\r\n    const editThread = (e) => {\r\n        e.preventDefault();\r\n        let postEdit = e.target.value;\r\n        setEditPost( {message: postEdit} );\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let editPostData = {\r\n            postId:props.walkPost._id,\r\n            userId:props.walkPost.userId,\r\n            edited: editPost.message\r\n        } \r\n\r\n        const apiReply = await fetch('/api/editPost', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(editPostData)\r\n          }).then( result=>result.json())   \r\n\r\n    props.submitForm(e)\r\n    props.loadPage();\r\n    }\r\n\r\n    const handleCancel = (e) => {\r\n        \r\n        props.submitForm(e)\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <div class=\"col-lg-12 ml-2\">\r\n                <div class=\"row justify-content-center\">\r\n                    {/* <div class={ alertMessage.type ? `alert alert-${alertMessage.type}` : `d-hide`} role=\"alert\">\r\n                        {alertMessage.message}\r\n                    </div> */}\r\n                    <form>\r\n                        \r\n                        <textarea type=\"textarea\" name=\"\" id=\"message\" value={editPost.message} onChange={editThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\r\n                        \r\n                        <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Submit</button>  \r\n                        <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n","import React, {useState, useEffect, } from 'react'\r\nimport { useLocation, useParams, Redirect, useHistory} from 'react-router-dom';\r\nimport PostForm from './PostForm';\r\nimport CommentForm from './CommentForm';\r\nimport CommentArray from './CommentArray';\r\nimport EditCommentForm from './EditCommentForm';\r\nimport EditPost from './EditPost';\r\n\r\n\r\nconst Posts = (props) => {\r\n    const [ walkPost, setWalkPost ] = useState({});\r\n    const [ showForm, setShowForm ] = useState(false);\r\n    const [ replyForm, setReplyForm ] = useState(false);\r\n    const [ editForm, setEditForm ] = useState(false);\r\n    const [ editPost, setEditPost ] = useState(false);\r\n    const[ replyResult, setReplyResult ] = useState( [] )\r\n    const[ numberReply, setNumberReply] = useState()\r\n    const[ myLike, setMyLike ] = useState();\r\n    const[ myName, setMyName ] = useState('');\r\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\r\n    const pageStyle = {\r\n        mainPost: {boxShadow: \"5px 3px #9E9E9E\", border: \"1px solid #9f6934\", background: \"#90ee90\"},\r\n        mainBtn: {display:\"block\", backgroundColor: 'transparent', border: 'none', color:'#9f6934', fontWeight:'bold'},\r\n        btn: {backgroundColor: 'transparent', border: 'none', display: 'inline', color:'#9f6934', fontWeight:'bold' }\r\n    }\r\n   \r\n    let params = useParams();\r\n    let{ name }=useParams();\r\n    \r\n    let{ postId } = useParams();\r\n  \r\n    // console.log(name) // console.log(params)\r\n   \r\n    let location = useLocation();\r\n   console.log('location is', location)\r\n   console.log('params is', params)\r\n\r\n    const loadPage = async () => {\r\n        //get the main post of the page\r\n        const apiGetWalkPost = await fetch(`/api/walkpost/${postId}`).then( result => result.json() )\r\n        // console.log(apiGetWalkPost[0].comment)\r\n        setWalkPost(apiGetWalkPost)\r\n        setMyName(apiGetWalkPost.user.name)\r\n        //get replies for the post\r\n        const apiGetReply = await fetch(`/api/replydata/${postId}`).then( result => result.json() )\r\n        // console.log([apiGetReply[0].comment])\r\n        apiGetReply.forEach(element => { \r\n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n        });\r\n        setReplyResult(apiGetReply)\r\n        let replyArray = apiGetReply.length;\r\n        setNumberReply(replyArray);   \r\n        setMyLike(apiGetWalkPost.likes);     \r\n    }\r\n    // console.log(walkPost);\r\n    // console.log('the reply result is',replyResult)\r\n    //submitForm for the Post reply\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        setShowForm(false);\r\n        setEditPost(false);\r\n    }\r\n    \r\n    //passing data from child to parent\r\n    const alertSuccess = (msg) => {\r\n        setAlertMessage({type: 'success', message: msg})\r\n        setTimeout( function(){ setAlertMessage( {} ); }, 1000 );\r\n    }\r\n\r\n    //passing data from child to parent\r\n    const alertFailure = (msg) => {\r\n        setAlertMessage({type: 'danger', message: msg})\r\n        setTimeout( function(){ setAlertMessage({}); }, 1000 );\r\n    }\r\n    //submit form for the comments\r\n    const addBtnReply = (e, idx) => {\r\n        e.preventDefault();\r\n        if(localStorage.id){\r\n            setReplyForm({id: idx, state: true});\r\n        } else \r\n        {\r\n            setReplyForm({id: '', state: false});\r\n        }\r\n  \r\n    }\r\n\r\n    const submitReply = (e, idx) => {\r\n        setReplyForm({id: idx, state: false});\r\n        setEditForm({id: idx, state: false});\r\n        e.preventDefault();\r\n    }\r\n\r\n    useEffect( function(){\r\n        loadPage();\r\n    }, [] );\r\n\r\n    //likes counter\r\n    const handleLike = async (e) => {\r\n        e.preventDefault(); \r\n\r\n        const apiLikeInc = await fetch(`/api/likeInc/${postId}`, \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify()\r\n          }).then( result=>result.json()); \r\n        loadPage();\r\n    }\r\n\r\n    const deleteBtnPost = async (e, idx, replyId) => {\r\n        e.preventDefault();\r\n        let id = e.target.id; \r\n        // console.log(id)\r\n        if(localStorage.id == id || localStorage.type === 'admin'){\r\n            const apiDeleteReply = await fetch(`/api/deletereply/${replyId}`, \r\n            {   method: 'delete'\r\n                \r\n            })\r\n            .then( result=>result.json()) \r\n            console.log(apiDeleteReply)\r\n        }\r\n        loadPage();\r\n    }\r\n\r\n    const editReply = (e, idx) => {\r\n        let id = e.target.id;\r\n        if(localStorage.id == id || localStorage.type === 'moderator' || localStorage.type === 'admin'){\r\n            setEditForm({id: idx, state: true});\r\n        }else{\r\n            setEditForm({id: '', state: false});\r\n        }\r\n       \r\n    }\r\n\r\n    const handleDelete = async (e, id, userId) => {\r\n        e.preventDefault();\r\n        const apiDeletePost = await fetch(`/api/deletepost/${id}/${userId}`, \r\n        {   method: 'delete'\r\n            \r\n        })\r\n        .then( result=>result.json()); \r\n        console.log(apiDeletePost);\r\n        window.location.href=\"/the-walks\";    \r\n    }\r\n\r\n    const handleEditPost = (e) => {\r\n        e.preventDefault();\r\n        setEditPost(true)\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <div style={{textAlign: 'center'}} class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\r\n                    {alertMessage.message}\r\n            </div>\r\n      \r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\r\n                </div>\r\n                \r\n                   \r\n               \r\n                \r\n                <div class=\"col-lg-12 mx-auto\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-10\">\r\n                            <h2 class=\"my-4\">{walkPost.title}</h2>\r\n                        </div>\r\n                        <div class=\"col-10\" style={pageStyle.mainPost}>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-6\">\r\n                                    <p style={{padding: '0px', fontSize: '20px'}}><b>{myName}</b></p>\r\n                                </div>      \r\n                                <div class=\"col-lg-3\" style={{fontSize: '20px'}}>\r\n                                    <small><b>{walkPost.createdAt}</b></small>\r\n                                </div> \r\n                                <div class=\"col-lg-3\" style={{fontSize: '20px'}} >\r\n                                    <small><b>Replies:{numberReply}</b></small>\r\n                                </div> \r\n                                { editPost ? <EditPost submitForm={submitForm} walkPost={walkPost} loadPage={loadPage}/> : <div class=\"col-12 mx-auto\">\r\n                                    <p class=\"my-4\" style={{fontSize: '20px'}}>{walkPost.message}</p>\r\n                                    </div> }\r\n                                <div class=\"col-12 mt-4\">\r\n                                    \r\n                                </div>     \r\n                            </div>\r\n                        </div>\r\n                        <div  class=\"col-lg-10 col-md-10 mt-2\" >\r\n                            <div class=\"row justify-content-start\">\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    <div><button style={pageStyle.btn} type=\"submit\" onClick={e => {handleLike(e)}}><i class=\"fas fa-thumbs-up\"></i></button>{walkPost.likes}</div>\r\n                                </div>\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    <button onClick={function () { localStorage.id ? setShowForm(true) : setShowForm(false)}} style={pageStyle.mainBtn}>Reply</button>\r\n                                    { showForm ?  <PostForm submitForm={submitForm} walkPost={walkPost} loadPage={loadPage} alertSuccess={alertSuccess} alertFailure={alertFailure}/> : ''}\r\n                                </div>\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    { localStorage.id === walkPost.userId || localStorage.type === 'moderator' || localStorage.type === 'admin'? <button onClick={handleEditPost} style={pageStyle.mainBtn}>Edit</button> : '' }\r\n                                </div>\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    { localStorage.id === walkPost.userId || localStorage.type === 'admin'? <button onClick={ e => handleDelete(e, walkPost._id, walkPost.userId)} style={pageStyle.mainBtn}>Delete</button> : ''}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* <div class=\"col-10 mx-auto mt-2\" style={{border: \"1px solid #9f6934\"}}>\r\n                            <button style={pageStyle.btn} type=\"submit\" onClick={e => {handleLike(e)}}><i class=\"fas fa-thumbs-up\"></i><span class=\"pl-2\">{myLike}</span></button>\r\n                            <button onClick={() => setShowForm(true)} style={pageStyle.mainBtn}>Reply</button>\r\n                            { showForm ?  <PostForm submitForm={submitForm} walkPost={walkPost} loadPage={loadPage}/> : ''}\r\n                            <button onClick={() => setShowForm(true)} style={pageStyle.mainBtn}>Edit</button>\r\n                            <button onClick={() => setShowForm(false)} style={pageStyle.mainBtn}>Delete</button>\r\n                        </div>     */}\r\n                    </div>    \r\n                </div>    \r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-lg-12\">\r\n                {replyResult.length !== 0 ? replyResult.map( (reply, idx) => <div class=\"row justify-content-center my-4\">\r\n                        <div class=\"col-lg-10 py-2\" style={{border:'2px solid #9f6934'}}>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <b>{reply.createdAt}</b>\r\n                                </div>   \r\n                                <div class=\"col-lg-2\">\r\n                                    <b>{reply.user.name}</b>\r\n                                </div>     \r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div class=\"col-lg-10\" >\r\n                            <div class=\"row\" style={{border:'1px solid #9f6934', background: '#D2B48C'}}>\r\n                                <div class=\"col-lg-10\">\r\n                                    <div class=\"row\">\r\n                                        {/* <div class=\"col-lg-6\">{reply.user.name}</div> */}\r\n                                        <div class=\"col-lg-4\"></div>\r\n                                    </div>        \r\n                                </div>\r\n                                { editForm.id == idx && editForm.state ? <EditCommentForm submitReply={submitReply} idx={idx} reply={reply} loadPage={loadPage}/> : <div class=\"col-lg-12 my-4\">\r\n                                    {reply.message}\r\n                                </div> }\r\n                                <div class=\"col-lg-12\" >\r\n                                    <div class=\"row justify-content-end\">\r\n                                        <button class=\"pr-4\" type=\"submit\" id={idx} onClick={e => addBtnReply(e, idx)} style={pageStyle.btn}>Reply</button><br/>\r\n                                        {/* { replyForm.id == idx && replyForm.state ? <CommentForm submitReply={submitReply} idx={idx} reply={reply} loadPage={loadPage}/> : ''} */}\r\n                                        <button class=\"pr-4\" type=\"submit\" id={reply.userId} onClick={e => editReply(e, idx)} style={pageStyle.btn}>Edit</button><br/>\r\n                                        <button class=\"pr-4\" type=\"submit\" id={reply.userId} onClick={e => deleteBtnPost(e, idx, reply._id)} style={pageStyle.btn}>Delete</button> <br/>\r\n                                        { replyForm.id == idx && replyForm.state ? <CommentForm submitReply={submitReply} idx={idx} alertSuccess={alertSuccess} alertFailure={alertFailure} reply={reply} loadPage={loadPage}/> : ''}\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                            <CommentArray comment={reply.comment} />   \r\n                        </div>\r\n                    </div> ) : ''}\r\n             \r\n                </div>    \r\n            </div>\r\n                        \r\n        </div> \r\n    </div>       \r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <div>\r\n            {/* <form>\r\n                <div class=\"input-group\">\r\n                    <input onChange={handleInputChange} value={searchInput} type=\"text\" class=\"form-control\" placeholder=\"Search your breed\"/>\r\n                    <div class=\"input-group-append\">\r\n                        <button onClick={function(){ props.setResultBreed(searchInput) }} class=\"btn btn-outline-primary\" type=\"button\">Search</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <ul class=\"col-6 list-group\">\r\n                        { showList.map( breed =><li class=\"list-group-item\" onClick={()=>setFormValue(breed)}>{breed}</li> )}\r\n                    </ul>\r\n                </div>\r\n            </form>      */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport { Redirect} from 'react-router-dom';\r\nimport SearchForm from './SearchForm'\r\nimport ModeratorTable from './ModeratorTable'\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    // if(localStorage.id == ''){\r\n    //     return <Redirect to='/login' />\r\n    // }\r\n    return( localStorage.id == ''? <Redirect to='/login' />: '')\r\n    \r\n    return (\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <h1>The admin page</h1> \r\n                   <SearchForm /> \r\n                   <ModeratorTable/>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Registration from './components/Registration/Registration';\nimport Homepage from './components/Homepage/Homepage';\nimport ForumHome from './components/Forum/ForumHome';\nimport LoginPage from './components/Loginout/LoginPage';\nimport LogoutPage from './components/Loginout/LogoutPage';\nimport Search from './components/Search/Search';\nimport Footer from './components/Footer/Footer';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport TheWalks from './components/Forum/TheWalks';\nimport Yapping from './components/Forum/Yapping';\nimport CoolPics from './components/Forum/CoolPics';\nimport Posts from './components/Posts/Posts';\nimport Admin from './components/Admin/Admin';\n\n\nfunction App() {\n\n  let id = localStorage.id;\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\" style={{minHeight: \"80vh\", padding: \"0\"}}>\n        \n\n          <Route exact path={[\"/\", \"/homepage\"]} component={ForumHome} />\n          {/* <Route exact path={\"/forum\"} component={ForumHome} /> */}\n          <Route exact path=\"/Search\" component={Search} />\n          <Route exact path=\"/registration\" component={Registration} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/logout\" component={LogoutPage} />\n          <Route exact path=\"user/:id\" component={Dashboard} />\n          <Route exact path=\"/the-walks\" component={TheWalks} />\n          <Route exact path=\"/yapping\" component={Yapping} />\n          <Route exact path=\"/treats\" component={CoolPics} />\n          <Route exact path=\"/the-walks/:name/:postId\" component={Posts} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route exact path=\"/user/:id\" component={Dashboard}/> \n          {/* <Route exact path=\"/the-walks/:id\" component={Posts} /> */}\n        </div>\n        <Footer />\n\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}