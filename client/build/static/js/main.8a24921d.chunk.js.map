{"version":3,"sources":["components/Registration/Registration.js","components/Forum/ForumHome.js","components/Loginout/LoginPage.js","components/Loginout/LogoutPage.js","components/Search/Search.js","components/Footer/Footer.js","components/Navbar.js","components/Dashboard/Dashboard.js","components/Forum/WalkForm.js","components/Forum/TheWalks.js","components/Forum/Yapping.js","components/Forum/CoolPics.js","components/Posts/PostForm.js","components/Posts/CommentForm.js","components/Posts/CommentArray.js","components/Posts/EditCommentForm.js","components/Posts/EditPost.js","components/Posts/Posts.js","components/Admin/SearchForm.js","components/Admin/TableDiv.js","components/Admin/ModeratorTable.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Registration","useState","name","email","password","userData","setUserData","isRegistered","setIsRegistered","type","message","alertMessage","setAlertMessage","inputEmail","useRef","inputPassword","handleInputChange","e","target","id","value","a","preventDefault","current","focus","test","length","localStorage","clear","fetch","method","headers","body","JSON","stringify","then","result","json","setTimeout","style","color","to","class","className","role","for","onChange","ref","onClick","ForumHome","useLocation","walkResult","setWalkResult","totalMessages","setTotalMessages","lastName","setLastName","lastUpdated","setLastUpdated","apiGetWalk","forEach","element","createdAt","Date","toString","substring","updatedAt","total","userReply","user","useEffect","loadPage","height","backgroundColor","padding","margin","paddingTop","paddingLeft","border","width","borderLeft","React","createContext","LoginPage","rememberMe","isLoggedIn","setIsLoggedIn","setImg","setName","apiResult","img","setItem","points","error","checked","LogoutPage","isLoggedOut","setIsLoggedOut","logoutRequest","Search","Footer","Navbar","isShown","setShown","showClass","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dashboard","setCreatedAt","setUpdatedAt","userPosts","setUserPosts","apiUserData","created","updated","userThreadWalk","userType","boxShadow","src","minHeight","map","slug","_id","title","WalkForm","props","myThread","setMyThread","updateThread","newThread","submitThread","url","newURL","trim","replace","walkData","data","apiThread","alert","placeholder","cols","rows","TheWalks","showForm","setShowForm","alertFailure","msg","find","ele","userId","userInfo","event","key","fontSize","pathname","info","pop","Yapping","CoolPics","PostForm","reply","myPost","setMyPost","submitForm","postData","postId","walkPost","post","alertSuccess","CommentForm","comment","addReply","setAddReply","replyId","userComment","submitReply","idx","commentData","CommentArray","item","commenterName","postcomment","EditCommentForm","editReply","setEditReply","editReplyData","edited","userEdit","EditPost","editPost","setEditPost","editPostData","postEdit","Posts","setWalkPost","replyForm","setReplyForm","editForm","setEditForm","replyResult","setReplyResult","numberReply","setNumberReply","myLike","setMyLike","myName","setMyName","pageStyle","mainPost","background","mainBtn","display","fontWeight","btn","useParams","apiGetWalkPost","apiGetReply","replyArray","likes","state","counter","likeData","apiDeleteReply","console","log","apiDeletePost","window","location","handleLike","handleDelete","addBtnReply","deleteBtnPost","SearchForm","TableDiv","myOption","setMyOption","users","newUsers","handleChange","handleSubmit","apiModerator","apiDeleteUser","MemberSince","getTime","Math","floor","selected","ModeratorTable","setUsers","apiGetUsers","updateAt","pointsSort","sort","x","y","Admin","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"mSAkHeA,MA/Gf,WAAwB,IAAD,EACeC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KADzD,mBACXC,EADW,KACDC,EADC,OAEuBL,oBAAU,GAFjC,mBAEXM,EAFW,KAEGC,EAFH,OAGuBP,mBAAU,CAAEQ,KAAM,GAAIC,QAAS,KAHtD,mBAGXC,EAHW,KAGGC,EAHH,KAKbC,EAAaC,mBACbC,EAAgBD,mBAEtB,SAASE,EAAmBC,GAAI,IAAD,EACLA,EAAEC,OAAhBC,EADmB,EACnBA,GAAIC,EADe,EACfA,MACZd,EAAY,2BAAMD,GAAP,kBAAkBc,EAAKC,KAVnB,4CAanB,WAA6BH,GAA7B,SAAAI,EAAA,yDACIJ,EAAEK,iBAEqB,KAAnBjB,EAASF,MAHjB,uBAIQU,EAAWU,QAAQC,QACnBZ,EAAiB,CAAEH,KAAM,SAAUC,QAAS,+BALpD,6BASU,gDAAgDe,KAAKpB,EAASF,OATxE,uBAUQU,EAAWU,QAAQC,QACnBZ,EAAiB,CAAEH,KAAM,SAAUC,QAAS,kCAXpD,6BAe8B,KAAtBL,EAASD,SAfjB,wBAgBQW,EAAcQ,QAAQC,QACtBZ,EAAiB,CAAEH,KAAM,SAAUC,QAAS,+BAjBpD,gCAqBQL,EAASD,SAASsB,OAAS,GArBnC,wBAsBQX,EAAcQ,QAAQC,QACtBZ,EAAiB,CAAEH,KAAM,SAAUC,QAAS,yDAvBpD,kCA2BIiB,aAAaC,QA3BjB,UA6B4BC,MAAM,yBAC1B,CAAIC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU7B,KACxB8B,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UApC9B,eAsCkB3B,SACVE,EAAiB,CAAEH,KAAM,UAAWC,QAAS,uCAC7C4B,YAAY,WAAY9B,GAAgB,KAAU,MAElDI,EAAiB,CAAEH,KAAM,SAAUC,QAAS,cAEhDJ,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,KA5CjD,6CAbmB,sBA4DnB,OACI,yBAAKmC,MAAO,CAACC,MAAO,UAEdjC,EAAe,kBAAC,IAAD,CAAUkC,GAAG,WAAc,GAC5C,6BAASC,MAAM,gBACX,yBAAKA,MAAM,aACP,iDACA,uBAAGA,MAAM,mBAAT,4CAGR,yBAAKC,UAAYhC,EAAaF,KAAb,sBAAmCE,EAAaF,MAAS,SAAWmC,KAAK,SACrFjC,EAAaD,SAGlB,yBAAKgC,MAAM,aACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,eAAX,YAGA,yBAAKA,MAAM,aACP,0BAAME,KAAK,QACP,2BAAOnC,KAAK,SAASU,GAAG,QAAQC,MAAM,KACtC,yBAAKsB,MAAM,cACP,2BAAOG,IAAI,QAAX,cACA,2BAAOzB,MAAOf,EAASH,KAAM4C,SAAU9B,EAAmBG,GAAG,OAAOV,KAAK,OAAOiC,MAAM,kBAE1F,yBAAKA,MAAM,cACP,2BAAOG,IAAI,SAAX,iBACA,2BACIzB,MAAOf,EAASF,MAChB2C,SAAU9B,EACV+B,IAAKlC,EACLM,GAAG,QAAQV,KAAK,QAAQiC,MAAM,kBAEtC,yBAAKA,MAAM,cACP,2BAAOG,IAAI,gBAAX,YACA,2BACIzB,MAAOf,EAASD,SAChB0C,SAAU9B,EACV+B,IAAKhC,EACLI,GAAG,WAAWV,KAAK,WAAWiC,MAAM,kBAE5C,4BAAQM,QAtGb,4CAsGoCN,MAAM,0BAArC,kBCmBbO,MAxHf,WACmBC,cAAf,IADiB,EAEqBjD,mBAAS,IAF9B,mBAETkD,EAFS,KAEGC,EAFH,OAG2BnD,mBAAU,IAHrC,mBAGToD,EAHS,KAGMC,EAHN,OAIgBrD,mBAAU,IAJ1B,mBAIVsD,EAJU,KAIAC,EAJA,OAKqBvD,mBAAS,IAL9B,mBAKVwD,EALU,KAKGC,EALH,iDAQjB,8BAAArC,EAAA,sEAC6BQ,MAAM,iBAAiBM,MAAM,SAAAC,GAAM,OAAIA,EAAOC,UAD3E,QACUsB,EADV,QAEeC,SAAQ,SAAAC,GACfA,EAAQC,UAAY,IAAIC,KAAKF,EAAQC,WAAWE,WAAWC,UAAU,EAAG,IACxEJ,EAAQK,UAAY,IAAIH,KAAKF,EAAQK,WAAWF,WAAWC,UAAU,EAAG,OAExEE,EAAQ,EACZR,EAAWC,SAAQ,SAAAC,GACfM,GAAgBN,EAAQO,UAAU1C,UAEtC0B,EAAeO,GACfL,EAAiBa,GACjBX,EAAaG,EAAW,GAAGU,KAAKnE,MAChCwD,EAAgBC,EAAW,GAAGO,WAblC,6CARiB,sBA8BjB,OAJII,qBAAW,YA1BE,mCA2BTC,KACD,IAGH,yBAAK7B,MAAM,mBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,oBAAoBH,MAAO,CAACiC,OAAQ,OAAQC,gBAAiB,UAAWC,QAAS,IAAKC,OAAQ,MACrG,wBAAIpC,MAAO,CAACqC,WAAY,OAAQC,YAAa,OAAQrC,MAAM,UAA3D,UAEJ,yBAAKE,MAAM,qBACP,wBAAIA,MAAM,QAAV,+BACA,sHAEJ,yBAAKA,MAAM,iBACP,yBAAKA,MAAM,0BACP,yBAAKA,MAAM,WAAYH,MAAO,CAACkC,gBAAiB,UAAWK,OAAQ,sBAC/D,yBAAKpC,MAAM,iBACH,yBAAKA,MAAM,eACP,yBAAKA,MAAM,iBACP,yBAAKA,MAAM,OAAOH,MAAO,CAACwC,MAAO,OAAQJ,OAAQ,WAAW,uBAAGjC,MAAM,oCAArE,MAEJ,yBAAKA,MAAM,kBACX,kBAAC,IAAD,CAAMD,GAAG,aAAaE,UAAU,YAAY,yDACxC,uBAAGD,MAAM,QAAT,0FACA,uBAAGA,MAAM,QAAO,0CAAkB,0BAAMA,MAAM,QAAQS,EAAWzB,QAAc,uCAAe,0BAAMgB,MAAM,QAAQW,OAIlI,yBAAKX,MAAM,gBAAgBH,MAAO,CAACyC,WAAY,sBAC3C,yBAAKtC,MAAM,eACP,yBAAKA,MAAM,uBACP,2BAAG,yCAAiB,0BAAMA,MAAM,QAAQa,GAAgB,4BAAO,0BAAMb,MAAM,QAAQe,SAOvG,yBAAKf,MAAM,qBACP,yBAAKA,MAAM,WAAWH,MAAO,CAACkC,gBAAiB,UAAWK,OAAQ,sBAC9D,yBAAKpC,MAAM,iBACH,yBAAKA,MAAM,eACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,OAAOH,MAAO,CAACwC,MAAO,OAAQJ,OAAQ,WAAW,uBAAGjC,MAAM,oCAArE,MAEJ,yBAAKA,MAAM,mBACX,kBAAC,IAAD,CAAMD,GAAG,aAAaE,UAAU,YAAY,wDACxC,uBAAGD,MAAM,QAAT,2FACA,uBAAGA,MAAM,QAAO,0CAAkB,0BAAMA,MAAM,QAAZ,MAA4B,uCAAe,0BAAMA,MAAM,QAAZ,UAI7F,yBAAKA,MAAM,gBAAgBH,MAAO,CAACyC,WAAY,sBAC3C,yBAAKtC,MAAM,eACP,yBAAKA,MAAM,wBACX,2BAAG,yCAAiB,0BAAMA,MAAM,QAAQa,GAAgB,4BAAO,0BAAMb,MAAM,QAAQe,SAOnG,yBAAKf,MAAM,qBACP,yBAAKA,MAAM,WAAWH,MAAO,CAACkC,gBAAiB,UAAWK,OAAQ,sBAC9D,yBAAKpC,MAAM,iBACH,yBAAKA,MAAM,eACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,OAAOH,MAAO,CAACwC,MAAO,OAAQJ,OAAQ,WAAW,uBAAGjC,MAAM,sCAEzE,yBAAKA,MAAM,aACX,kBAAC,IAAD,CAAMD,GAAG,aAAaE,UAAU,YAAY,sCACxC,uBAAGD,MAAM,QAAT,0FACA,uBAAGA,MAAM,QAAO,0CAAkB,0BAAMA,MAAM,QAAZ,MAA4B,uCAAe,0BAAMA,MAAM,QAAZ,UAI7F,yBAAKA,MAAM,gBAAgBH,MAAO,CAACyC,WAAY,sBAC3C,yBAAKtC,MAAM,eACP,yBAAKA,MAAM,wBACX,2BAAG,yCAAiB,0BAAMA,MAAM,QAAQa,GAAgB,4BAAO,0BAAMb,MAAM,QAAQe,aC5G5FwB,IAAMC,gBAwHlBC,MAtHf,WAAoB,MAEkBlF,mBAAS,CAAEC,KAAM,GAAIC,MAAOwB,aAAaxB,MAAOC,SAAU,GAAIgF,YAAY,IAF5F,mBAER/E,EAFQ,KAEEC,EAFF,OAGsBL,oBAAU,GAHhC,mBAGRoF,EAHQ,KAGIC,EAHJ,OAI0BrF,mBAAU,CAAEQ,KAAM,GAAIC,QAAS,KAJzD,mBAIRC,EAJQ,KAIMC,EAJN,OAKQX,mBAAU,IALlB,mBAKHsF,GALG,aAMUtF,mBAAU,IANpB,mBAMFuF,GANE,WAQV3E,EAAaC,mBACbC,EAAgBD,mBAEtB,SAASE,EAAmBC,GAAI,IAAD,EACLA,EAAEC,OAAhBC,EADmB,EACnBA,GAAIC,EADe,EACfA,MACZd,EAAY,2BAAMD,GAAP,kBAAkBc,EAAKC,KAbtB,4CAoBhB,WAA0BH,GAA1B,eAAAI,EAAA,yDACIJ,EAAEK,iBACFhB,EAAY,CAAEJ,KAAM,GAAIC,MAAOwB,aAAaxB,MAAOC,SAAU,GAAIgF,YAAY,IAEtD,KAAnB/E,EAASF,MAJjB,uBAKQU,EAAWU,QAAQC,QACnBZ,EAAiB,CAAEH,KAAM,SAAUC,QAAS,+BANpD,+BAU8B,KAAtBL,EAASD,UAAmBC,EAASD,SAASsB,OAAS,GAV/D,wBAWQX,EAAcQ,QAAQC,QACtBZ,EAAiB,CAAEH,KAAM,SAAUC,QAAS,kCAZpD,4CAgB4BmB,MAAM,kBAC1B,CAAIC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU7B,KACtB8B,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAvBhC,WAgBUoD,EAhBV,OAyBQF,EAAOE,EAAUC,KACjBF,EAAQC,EAAUvF,MAClByB,aAAagE,QAAQ,QAASF,EAAUtF,OACxCwB,aAAagE,QAAQ,KAAMF,EAAUtE,IACrCQ,aAAagE,QAAQ,OAAQF,EAAUvF,MACvCyB,aAAagE,QAAQ,SAAUF,EAAUG,QACzCjE,aAAagE,QAAQ,OAAQF,EAAUhF,MAEtCgF,EAAU/E,QAjCnB,wBAkCQE,EAAiB,CAAEH,KAAM,SAAUC,QAAS+E,EAAUI,QAlC9D,2BAsCIjF,EAAiB,CAAEH,KAAM,UAAWC,QAAS,4BAC7CiB,aAAaxB,MAAUsF,EAAUL,WAAaK,EAAUtF,MAAQ,GAChEmC,YAAY,WAAYgD,GAAc,KAAU,KAxCpD,6CApBgB,sBAgEhB,OACI,6BAMA,yBAAK/C,MAAO,CAACC,MAAO,UACd6C,EAAa,kBAAC,IAAD,CAAU5C,GAAG,MAAS,GAErC,yBAAKE,UAAYhC,EAAaF,KAAb,sBAAmCE,EAAaF,MAAS,SAAWmC,KAAK,SACrFjC,EAAaD,SAElB,6BAASgC,MAAM,eACX,yBAAKA,MAAM,aACP,qCACA,uBAAGA,MAAM,mBAAT,mBAIR,yBAAKA,MAAM,aACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,aACP,0BAAME,KAAK,QACP,yBAAKF,MAAM,cACP,2BAAOG,IAAI,aAAX,iBACA,2BACIzB,MAAOf,EAASF,MAChB2C,SAAU9B,EACV+B,IAAKlC,EACLM,GAAG,QAAQV,KAAK,QAAQiC,MAAM,kBAEtC,yBAAKA,MAAM,cACP,2BAAOG,IAAI,gBAAX,YACA,2BACIzB,MAAOf,EAASD,SAChB0C,SAAU9B,EACV+B,IAAKhC,EACLI,GAAG,WAAWV,KAAK,WAAWiC,MAAM,kBAE5C,4BAAQM,QAxGhB,4CAwGoCvC,KAAK,SAASiC,MAAM,0BAAhD,SAjBJ,OAmBI,2BAAOjC,KAAK,WAAWqF,QAASzF,EAAS+E,WAAYtC,SA1F7E,WACIxC,EAAY,2BAAMD,GAAP,IAAiB+E,YAAa/E,EAAS+E,iBA0F9B,2BAAO1C,MAAM,iBAAiBG,IAAI,cAAlC,eApBJ,QAqBI,kBAAC,IAAD,CAAMJ,GAAG,iBAAT,4BCjFbsD,MA3Bf,WAAsB,IAAD,EACuB9F,oBAAU,GADjC,mBACT+F,EADS,KACIC,EADJ,iDASjB,sBAAA5E,EAAA,sDACIM,aAAaR,GAAK,GAClBmB,YAAY,WAAY2D,GAAe,KAAU,KAFrD,4CATiB,sBAejB,OAZA3B,qBAAW,YAHM,mCAKb4B,KACD,IAUC,6BACMF,EAAc,kBAAC,IAAD,CAAUvD,GAAG,WAAc,GAC3C,6BAASC,MAAM,yBACX,yBAAKA,MAAM,aACP,uBAAGA,MAAM,mBAAT,mCCdLyD,MARf,WACI,OACI,+BCMOC,MARf,WACI,OACI,+BCiEOC,MAlEf,WACqBnD,cAAjB,IADc,EAEcjD,oBAAS,GAFvB,mBAEPqG,EAFO,KAEEC,EAFF,KAGVC,EAAaF,EAAD,2DAEZnF,EAAKQ,aAAaR,GAElBhB,GADWwB,aAAazB,KAChByB,aAAaxB,OAEzB,OACI,6BACI,yBAAKwC,UAAU,iDACX,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,eAAe8D,KAAK,KAA3C,SAAqD,uBAAG/D,MAAM,uBAA9D,cACA,4BAAQA,MAAM,iBAAiBjC,KAAK,SAASiG,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAAoB9D,QAAS,kBAAIuD,GAAUD,KAC/L,0BAAM3D,UAAU,yBAEnB,yBAAKA,UAAW6D,EAAWrF,GAAG,aAC3B,wBAAIwB,UAAU,cACd,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,YAAvB,SAQDhB,aAAaR,GAGR,GAFR,wBAAIwB,UAAU,YACV,kBAAC,IAAD,CAAMF,GAAG,gBAAgBE,UAAU,WAAW8D,KAAK,KAAnD,aAEO,kBAATtG,EACF,wBAAIwC,UAAU,YACV,kBAAC,IAAD,CAAMF,GAAG,SAASE,UAAU,WAAW8D,KAAK,KAA5C,UACI,GACLtF,EAIH,wBAAIwB,UAAU,YACd,kBAAC,IAAD,CAAMF,GAAE,gBAAWtB,GAAMwB,UAAU,WAAW8D,KAAK,KAAnD,cAJA,wBAAI9D,UAAU,YACd,kBAAC,IAAD,CAAMF,GAAG,SAASE,UAAU,WAAW8D,KAAK,KAA5C,UAMCtF,EACD,wBAAIwB,UAAU,YACd,kBAAC,IAAD,CAAMF,GAAG,UAAUE,UAAU,WAAW8D,KAAK,KAA7C,WACO,QC+CZM,MA5Ff,WAAsB,IAAD,EACgB9G,mBAAS,IADzB,mBACTI,EADS,KACCC,EADD,OAEiBL,mBAAS,IAF1B,mBAEV6D,EAFU,KAECkD,EAFD,OAGiB/G,mBAAS,IAH1B,mBAGViE,EAHU,KAGC+C,EAHD,OAIiBhH,mBAAS,IAJ1B,mBAIViH,EAJU,KAICC,EAJD,KAMbhG,EAAKQ,aAAaR,GANL,4CAYjB,gCAAAE,EAAA,sEAC8BQ,MAAM,iBAAD,OAAkBV,IAAMgB,MAAM,SAAAC,GAAM,OAAIA,EAAOC,UADlF,OACU+E,EADV,OAGYC,EAAU,IAAItD,KAAKqD,EAAYtD,WAAWE,WAAWC,UAAU,EAAG,IAElEqD,EAAU,IAAIvD,KAAKqD,EAAYlD,WAAWF,WAAWC,UAAU,EAAG,IAG1E3D,EAAY8G,GACZJ,EAAaK,GACbJ,EAAaK,GACbH,EAAaC,EAAYG,gBACzB5F,aAAagE,QAAQ,OAAQyB,EAAYI,UACzC7F,aAAagE,QAAQ,SAAUyB,EAAYxB,QAb/C,6CAZiB,sBAiCjB,OAzBAtB,qBAAW,YARM,mCASbC,KACD,IAwBC,yBAAK7B,MAAM,mBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,8BAA8BH,MAAO,CAACiC,OAAQ,OAAQC,gBAAiB,UAAWC,QAAS,IAAKC,OAAQ,MAC/G,wBAAIpC,MAAO,CAACqC,WAAY,OAAQC,YAAa,OAAQrC,MAAM,UAA3D,cAGJ,yBAAKE,MAAM,oCACP,yBAAKA,MAAM,sCAAsCH,MAAO,CAACkF,UAAW,kBAAmB3C,OAAQ,sBAC3F,yBAAKpC,MAAM,0BACP,yBAAKgF,IAAKrH,EAASqF,IAAKnD,MAAO,CAACoF,UAAU,OAAQnD,OAAO,SAAU9B,MAAM,mBAE7E,yBAAKA,MAAM,yBAAyBH,MAAO,CAACmC,QAAS,QACjD,yBAAKhC,MAAM,YACH,yBAAKA,MAAM,yBAAyBH,MAAO,CAACmC,QAAS,QACjD,qCADJ,IACmBrE,EAASH,MAE5B,yBAAKwC,MAAM,yBAAyBH,MAAO,CAACmC,QAAS,QACjD,sCADJ,IACoBrE,EAASF,OAE7B,yBAAKuC,MAAM,gBAAgBH,MAAO,CAACmC,QAAS,QACxC,8CADJ,IAC4BrE,EAASuF,OAC/BvF,EAASuF,OAAS,EAAI,uBAAGlD,MAAM,QAAT,iDAAoE,IAEhG,yBAAKA,MAAM,yBAAyBH,MAAO,CAACmC,QAAS,QAC/CrE,EAASuF,OAAS,EAAI,6BAAK,4CAAL,WAAyC,6BAAK,4CAAL,aAErE,yBAAKlD,MAAM,yBAAyBH,MAAO,CAACmC,QAAS,QACjD,4CAAqBZ,GAEzB,yBAAKpB,MAAM,yBAAyBH,MAAO,CAACmC,QAAS,QACjD,+CAAwBR,OAQ3B,GAApBgD,EAAUxF,OACX,yBAAKgB,MAAM,oCACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,uBACP,2CAEHwE,EAAUU,KAAK,SAAA/D,GAAO,OAAI,yBAAKnB,MAAM,aAAY,kBAAC,IAAD,CAAMD,GAAE,qBAAgBoB,EAAQgE,KAAxB,YAAgChE,EAAQiE,MAAQjE,EAAQkE,aAI1H,yBAAKrF,MAAM,oCACP,yBAAKA,MAAM,uBACP,qD,QCNTsF,MAhFf,SAAkBC,GAAQ,IAAD,EAEWhI,mBAAU,CAAC8H,MAAO,GAAIrH,QAAS,KAF1C,mBAEdwH,EAFc,KAEJC,EAFI,OAGmBlI,mBAAU,CAACQ,KAAM,GAAIC,QAAS,KAHjD,mBAGdC,EAHc,KAGAC,EAHA,KAMrB,SAASwH,EAAanH,GAClBA,EAAEK,iBACH,IAAIH,EAAKF,EAAEC,OAAOC,GAGdC,EAAQH,EAAEC,OAAOE,MAGhBiH,EAAS,2BAAUH,GAAV,kBAAqB/G,EAAMC,IAGzC+G,EAAYE,GAjBM,4CAoBrB,WAA4BpH,GAA5B,qBAAAI,EAAA,yDACIJ,EAAEK,iBACF2G,EAAMK,aAAarH,GACfsH,EAAML,EAASH,MACfS,EAASD,EAAIE,OAAOC,QAAQ,MAAQ,KAAKA,QAAQ,MAAO,IAEpC,IAApBR,EAASxH,QANjB,wBAOQiI,EAAW,CACXxH,GAAKQ,aAAaR,GAClByH,KAAOV,EACPL,KAAOW,EACPtI,KAAMyB,aAAazB,MAX3B,SAc4B2B,MAAM,iBAC1B,CAAIC,OAAQ,OAERC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUyG,KACxBxG,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAtB9B,QAcUwG,EAdV,QAwBmBnI,SACTE,EAAgB,CAACH,KAAM,UAAWC,QAASmI,EAAUnI,UACrD4B,YAAY,WAAY1B,EAAiB,MAAS,OAEpDA,EAAgB,CAACH,KAAM,SAAUC,QAASmI,EAAUnI,UACpD4B,YAAY,WAAY1B,EAAgB,MAAQ,MAElDqH,EAAM1D,WA/BZ,wBAiCQuE,MAAO,qBAjCf,6CApBqB,sBA8DrB,OACI,yBAAKpG,MAAM,aACP,yBAAKA,MAAM,8BACP,yBAAKA,MAAQ/B,EAAaF,KAAb,sBAAmCE,EAAaF,MAAhD,SAAmEmC,KAAK,SAChFjC,EAAaD,SAElB,8BACI,8BAAUD,KAAK,WAAWP,KAAK,GAAGiB,GAAG,QAAQC,MAAO8G,EAASH,MAAOjF,SAAUsF,EAAcW,YAAY,QAAQC,KAAK,MAAMC,KAAK,MAAgB,6BAChJ,8BAAUxI,KAAK,WAAWP,KAAK,GAAGiB,GAAG,UAAUC,MAAO8G,EAASxH,QAASoC,SAAUsF,EAAcW,YAAY,eAAeC,KAAK,MAAMC,KAAK,MAAgB,6BAE3J,4BAAQvG,MAAM,gBAAgBjC,KAAK,SAASuC,QAxEvC,6CAwEL,OACA,4BAAQN,MAAM,gBAAgBjC,KAAK,SAASuC,QAhB5D,SAAsB/B,GAClBgH,EAAMK,aAAarH,KAeP,cC6ELiI,MAnJf,WACqBhG,cAAjB,IADgB,EAEejD,oBAAS,GAFxB,mBAEVkJ,EAFU,KAEAC,EAFA,OAGsBnJ,mBAAS,IAH/B,mBAGRkD,EAHQ,KAGIC,EAHJ,OAIwBnD,mBAAU,CAACQ,KAAM,GAAIC,QAAS,KAJtD,mBAITC,EAJS,KAIKC,EAJL,KAkBhB,SAASyI,EAAaC,GAClB1I,EAAgB,CAACH,KAAM,SAAUC,QAAS4I,IAC1ChH,YAAY,WAAY1B,EAAgB,MAAQ,KApBpC,SAuBD2D,IAvBC,2EAuBhB,4BAAAlD,EAAA,sEAC6BQ,MAAM,iBAAiBM,MAAM,SAAAC,GAAM,OAAIA,EAAOC,UAD3E,QACUsB,EADV,QAGeC,SAAQ,SAAAC,GACfA,EAAQC,UAAY,IAAIC,KAAKF,EAAQC,WAAWE,WAAWC,UAAU,EAAG,IACxEJ,EAAQK,UAAY,IAAIH,KAAKF,EAAQK,WAAWF,WAAWC,UAAU,EAAG,OAU5Eb,EAAc,YAAIO,IAftB,4CAvBgB,sBAmEhB,OANAW,qBAAW,WACPC,MACD,IAKC,yBAAK7B,MAAM,mBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,oBAAoBH,MAAO,CAACiC,OAAQ,OAAQC,gBAAiB,UAAWC,QAAS,IAAKC,OAAQ,MACrG,wBAAIpC,MAAO,CAACqC,WAAY,OAAQC,YAAa,OAAQrC,MAAM,UAA3D,UAEJ,yBAAKE,MAAM,eACP,yBAAKA,MAAO/B,EAAaF,KAAb,sBAAmCE,EAAaF,MAAS,SAAYmC,KAAK,SACjFjC,EAAaD,UAGtB,yBAAKgC,MAAM,qBACP,wBAAIA,MAAM,QAAV,4BACA,2HAEJ,yBAAKA,MAAM,qBACP,yBAAKA,MAAM,mCAEP,4BAAQM,QA3C5B,SAAsB/B,GAClBA,EAAEK,iBACF,IAAIH,EAAKQ,aAAaR,GAClBiB,EAASe,EAAWoG,MAAM,SAAAC,GAAG,OAAIA,EAAIC,SAAWtI,KAE5B,SAArBQ,aAAalB,MACZ2I,GAAa,GAEbhH,GAAUA,EAAOsH,SAAS,GAAG9D,OAAS,GACtCwD,GAAa,GACVzH,aAAaR,IAChBkI,EAAa,kEAEdjH,GAAUA,EAAOsH,SAAS,GAAG9D,OAAS,GACrCyD,EAAa,0EA6BD,YAAgD,6BAC/CF,EAAW,kBAAC,EAAD,CAAUb,aA/E1C,SAAsBrH,GAClBA,EAAEK,iBACF8H,GAAa,IA6EsD7E,SAAUA,IAAc,KAGnF,6BACI,yBAAK7B,MAAM,OACP,yBAAKA,MAAM,wCAAwCH,MAAO,CAACuC,OAAO,uBAK1E,yBAAKpC,MAAM,0BACF,6BAEG,2BAAOA,MAAM,kBACT,+BACI,wBAAIH,MAAO,CAACiC,OAAQ,OAAQM,OAAQ,oBAAqBL,gBAAiB,UAAWC,QAAS,IAAKC,OAAQ,IAAKnC,MAAO,UACnH,wBAAKD,MAAO,CAAEwC,MAAM,SACpB,wBAAKxC,MAAO,CAAEwC,MAAM,QAApB,SAEA,wBAAIrC,MAAM,cAAcH,MAAO,CAAEwC,MAAO,QAAxC,WACA,wBAAIrC,MAAM,cAAcH,MAAO,CAAEwC,MAAO,QAAxC,SACA,wBAAIrC,MAAM,cAAcH,MAAO,CAAEwC,MAAO,QAAxC,mBAGgB,IAAtB5B,EAAWzB,OAAeyB,EAAWyE,KAAK,SAAA+B,GAAK,OAAI,+BACjD,wBAAIpH,MAAO,CAAEiC,OAAQ,OAAQM,OAAQ,sBACjC,wBAAIvC,MAAO,CAACmC,QAAS,kBAAkB,uBAAGhC,MAAM,qCAChD,wBAAIH,MAAO,CAACmC,QAAS,cAAekF,IAAKD,EAAM7B,KAC3C,yBAAKvF,MAAO,CAACsH,SAAU,SACnB,kBAAC,IAAD,CAAMpH,GAAI,CAAEqH,SAAS,cAAD,OAAgBH,EAAM9B,KAAtB,YAA8B8B,EAAM7B,KACxCiC,KAAK,CAAC5I,GAAIwI,EAAM7B,OAGpC,2BAAI6B,EAAM5B,OAJN,KAIwB,8BAE5B,yBAAKrF,MAAM,QACNiH,EAAMtF,KAAKnE,KAAK,6BAChByJ,EAAM7F,YAKf,wBAAIpB,MAAM,cAAcH,MAAO,CAACmC,QAAS,eAAgBiF,EAAMvF,UAAU1C,QACzE,wBAAIgB,MAAM,cAAcH,MAAO,CAACmC,QAAS,eAAzC,MACA,wBAAIhC,MAAM,cAAcH,MAAO,CAACmC,QAAS,eACpCiF,EAAMzF,UAAU,8BAEhB,WAEG,OADCyF,EAAMvF,UAAU4F,MACVL,EAAMvF,UAAU,GAAGlE,aAG9B,SCrI7B+J,MARf,WACI,OACI,+BCMOC,MARf,WACI,OACI,+BCuEOC,MAzEf,SAAkBlC,GAAO,MAEQhI,mBAAU,CAAEmK,MAAM,KAF1B,mBAEdC,EAFc,KAENC,EAFM,iDAYrB,WAA4BrJ,GAA5B,eAAAI,EAAA,yDACIJ,EAAEK,iBACF2G,EAAMsC,WAAWtJ,GACJU,aAAaR,GAEN,IAAhBkJ,EAAOD,MALf,wBAOQI,EAAW,CACXtK,KAAMyB,aAAazB,KACnBuK,OAAQxC,EAAMyC,SAAS5C,IACvB2B,OAAQ9H,aAAaR,GACrBwJ,KAAMN,GAXd,SAc2BxI,MAAM,aACzB,CAAIC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUsI,KACxBrI,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UArB9B,cAwBoB3B,QACRuH,EAAM2C,aAAa,6CAGnB3C,EAAMoB,aAAa,yCAGzBpB,EAAM1D,WA/BZ,wBAkCQ0D,EAAMoB,aAAa,kBAlC3B,6CAZqB,sBA0DrB,OACI,6BAEK,0BAAM3G,MAAM,QAET,8BAAUjC,KAAK,WAAWP,KAAK,GAAGiB,GAAG,UAAUC,MAAOiJ,EAAOD,MAAOtH,SA1DhF,SAAoB7B,GAChBA,EAAEK,iBACF,IAAIqJ,EAAO,CAAEP,MAAOnJ,EAAEC,OAAOE,OAC7BkJ,EAAUK,IAuDwF5B,YAAY,eAAeC,KAAK,MAAMC,KAAK,MAAgB,6BAErJ,4BAAQxI,KAAK,SAASuC,QAjEb,6CAiET,UACA,4BAAQvC,KAAK,SAASuC,QAhBlC,SAAsB/B,GAClBgH,EAAMsC,WAAWtJ,KAeT,aCMD4J,MAxEf,SAAqB5C,GAAQ,IAAD,EACQhI,mBAAS,CAAC6K,QAAQ,KAD1B,mBACjBC,EADiB,KACPC,EADO,KAIpBC,EAAUhD,EAAMmC,MAAMtC,IACtB2C,EAASxC,EAAMmC,MAAMK,OALD,4CAQxB,WAA4BxJ,GAA5B,eAAAI,EAAA,sDACIJ,EAAEK,iBACE4J,EAAcjK,EAAEC,OAAOE,MAE3B4J,EAAY,CAACF,QAASI,IAJ1B,4CARwB,kEAgBxB,WAA4BjK,GAA5B,eAAAI,EAAA,yDACIJ,EAAEK,iBACF2G,EAAMkD,YAAYlK,EAAGgH,EAAMmD,KAEH,IAApBL,EAASD,QAJjB,wBAKQO,EAAc,CACdZ,OAAOA,EACPhB,OAAO9H,aAAaR,GACpBjB,KAAMyB,aAAazB,KACnB+K,QAASA,EACTH,QAASC,EAASD,SAV1B,SAa2BjJ,MAAM,gBACzB,CAAIC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUmJ,KACxBlJ,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UApB9B,cAuBgB3B,QACRuH,EAAM2C,aAAa,+CAEnB3C,EAAMoB,aAAa,yCAGrBpB,EAAM1D,WA7BZ,wBAgCQ0D,EAAMoB,aAAa,wCAhC3B,6CAhBwB,sBAwDxB,OAEI,yBAAK3G,MAAM,kBACP,yBAAKA,MAAM,2BACP,8BAEI,8BAAUjC,KAAK,OAAOP,KAAK,GAAGiB,GAAG,UAAUC,MAAO2J,EAASD,QAAShI,SA9D5D,4CA8DoFiG,YAAY,eAAeC,KAAK,MAAMC,KAAK,MAAe,6BAEtJ,4BAAQvG,MAAM,gBAAgBjC,KAAK,SAASuC,QAhEpC,6CAgER,OACA,4BAAQN,MAAM,gBAAgBjC,KAAK,SAASuC,QAb5D,SAAsB/B,GAClBgH,EAAMkD,YAAYlK,KAYN,cCzCLqK,MAxBf,SAAsBrD,GAAQ,IAAD,EACMhI,mBAAS,IADf,mBAMzB,OANyB,UAEL,eAAIgI,EAAM6C,SAK1B,6BAC+B,IAAzB7C,EAAM6C,QAAQpJ,OAAeuG,EAAM6C,QAAQlD,KAAK,SAAA2D,GAAI,OAAI,yBAAK7I,MAAM,2BACrE,yBAAKA,MAAM,YAAYH,MAAO,CAACuC,OAAO,sBAClC,yBAAKpC,MAAM,kBACP,6BAAK,2BAAI6I,EAAKC,gBACd,+BAEJ,yBAAK9I,MAAM,kBAAkB6I,EAAKE,kBAGhC,KCqCHC,MArDf,SAAyBzD,GAAO,MAEOhI,mBAAU,CAACS,QAASuH,EAAMmC,MAAM1J,UAFvC,mBAErBiL,EAFqB,KAEVC,EAFU,iDAY5B,WAAgC3K,GAAhC,eAAAI,EAAA,6DACIJ,EAAEK,iBAEFuK,EAAgB,CACZpB,OAAOxC,EAAMmC,MAAMK,OACnBhB,OAAOxB,EAAMmC,MAAMK,OACnBQ,QAAQhD,EAAMmC,MAAMtC,IACpBgE,OAAQH,EAAUjL,SAP1B,SAU2BmB,MAAM,iBACzB,CAAIC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU2J,KACxB1J,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAjB9B,cAmBA4F,EAAMkD,YAAYlK,GAClBgH,EAAM1D,WApBN,4CAZ4B,sBAuC5B,OACI,yBAAK7B,MAAM,uBACP,yBAAKA,MAAM,OACP,8BACI,8BAAUjC,KAAK,OAAOP,KAAK,GAAGiB,GAAG,UAAUC,MAAOuK,EAAUjL,QAASoC,SAvCrF,SAAoB7B,GAChBA,EAAEK,iBACF,IAAIyK,EAAW9K,EAAEC,OAAOE,MACxBwK,EAAc,CAAClL,QAASqL,KAoC+EhD,YAAY,eAAeC,KAAK,MAAMC,KAAK,MAAe,6BAErJ,4BAAQvG,MAAM,gBAAgBjC,KAAK,SAASuC,QA7ChC,6CA6CZ,UACA,4BAAQN,MAAM,gBAAgBjC,KAAK,SAASuC,QAX5D,SAA0B/B,GACtBgH,EAAMkD,YAAYlK,KAUN,cCYL+K,MA3Df,SAAkB/D,GAAO,MAEYhI,mBAAU,CAACS,QAAQuH,EAAMyC,SAAShK,UAF9C,mBAEduL,EAFc,KAEJC,EAFI,iDAWrB,WAA4BjL,GAA5B,eAAAI,EAAA,6DACIJ,EAAEK,iBACE6K,EAAe,CACf1B,OAAOxC,EAAMyC,SAAS5C,IACtB2B,OAAOxB,EAAMyC,SAASjB,OACtBqC,OAAQG,EAASvL,SALzB,SAQ2BmB,MAAM,gBACzB,CAAIC,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUiK,KACxBhK,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAf9B,cAiBA4F,EAAMsC,WAAWtJ,GACjBgH,EAAM1D,WAlBN,4CAXqB,sBAsCrB,OACI,6BACK,yBAAK7B,MAAM,kBACR,yBAAKA,MAAM,8BAIP,8BAEI,8BAAUjC,KAAK,WAAWP,KAAK,GAAGiB,GAAG,UAAUC,MAAO6K,EAASvL,QAASoC,SA1C5F,SAAoB7B,GAChBA,EAAEK,iBACF,IAAI8K,EAAWnL,EAAEC,OAAOE,MACxB8K,EAAa,CAACxL,QAAS0L,KAuCuFrD,YAAY,eAAeC,KAAK,MAAMC,KAAK,MAAgB,6BAEzJ,4BAAQvG,MAAM,gBAAgBjC,KAAK,SAASuC,QAjD3C,6CAiDD,UACA,4BAAQN,MAAM,gBAAgBjC,KAAK,SAASuC,QAlBhE,SAAsB/B,GAElBgH,EAAMsC,WAAWtJ,GACjBA,EAAEK,mBAec,eC6NT+K,MAxQf,SAAepE,GAAQ,IAAD,EACgBhI,mBAAS,IADzB,mBACVyK,EADU,KACA4B,EADA,OAEgBrM,oBAAS,GAFzB,mBAEVkJ,EAFU,KAEAC,EAFA,OAGkBnJ,oBAAS,GAH3B,mBAGVsM,EAHU,KAGCC,EAHD,OAIgBvM,oBAAS,GAJzB,mBAIVwM,EAJU,KAIAC,EAJA,OAKgBzM,oBAAS,GALzB,mBAKVgM,EALU,KAKAC,EALA,OAMqBjM,mBAAU,IAN/B,mBAMX0M,EANW,KAMEC,EANF,OAOoB3M,qBAPpB,mBAOX4M,EAPW,KAOEC,EAPF,OAQW7M,mBAAS,GARpB,mBAQX8M,EARW,KAQHC,EARG,OASW/M,mBAAS,IATpB,mBASXgN,EATW,KASHC,EATG,OAUsBjN,mBAAU,CAACQ,KAAM,GAAIC,QAAS,KAVpD,mBAUXC,EAVW,KAUGC,EAVH,KAWZuM,EAAY,CACdC,SAAU,CAAC3F,UAAW,kBAAmB3C,OAAQ,oBAAqBuI,WAAY,WAClFC,QAAS,CAACC,QAAQ,QAAS9I,gBAAiB,cAAeK,OAAQ,OAAQtC,MAAM,UAAWgL,WAAW,QACvGC,IAAK,CAAChJ,gBAAiB,cAAeK,OAAQ,OAAQyI,QAAS,SAAU/K,MAAM,UAAWgL,WAAW,SAKpG/C,GAFQiD,cACDA,cAAPxN,KACWwN,cAAXjD,QAnBa,SA0BHlG,KA1BG,8EA0BlB,gCAAAlD,EAAA,sEAEiCQ,MAAM,iBAAD,OAAkB4I,IAAUtI,MAAM,SAAAC,GAAM,OAAIA,EAAOC,UAFzF,cAEUsL,EAFV,OAIIrB,EAAYqB,GACZT,EAAUS,EAAetJ,KAAKnE,MALlC,SAO8B2B,MAAM,kBAAD,OAAmB4I,IAAUtI,MAAM,SAAAC,GAAM,OAAIA,EAAOC,UAPvF,QAOUuL,EAPV,QASgBhK,SAAQ,SAAAC,GAChBA,EAAQC,UAAY,IAAIC,KAAKF,EAAQC,WAAWE,WAAWC,UAAU,EAAG,IACxEJ,EAAQK,UAAY,IAAIH,KAAKF,EAAQK,WAAWF,WAAWC,UAAU,EAAG,OAE5E2I,EAAegB,GACXC,EAAaD,EAAYlM,OAC7BoL,EAAee,GACfb,EAAUW,EAAeG,OAhB7B,6CA1BkB,sBAgDlB,SAASvD,GAAWtJ,GAChBA,EAAEK,iBACF8H,GAAY,GACZ8C,GAAY,GAIhB,SAAStB,GAAatB,GAClB1I,EAAgB,CAACH,KAAM,UAAWC,QAAS4I,IAC3ChH,YAAY,WAAY1B,EAAiB,MAAS,KAItD,SAASyI,GAAaC,GAClB1I,EAAgB,CAACH,KAAM,SAAUC,QAAS4I,IAC1ChH,YAAY,WAAY1B,EAAgB,MAAQ,KAcpD,SAASuK,GAAYlK,EAAGmK,GACpBoB,EAAa,CAACrL,GAAIiK,EAAK2C,OAAO,IAC9BrB,EAAY,CAACvL,GAAIiK,EAAK2C,OAAO,IAC7B9M,EAAEK,iBAhFY,8CAwFlB,WAA0BL,GAA1B,iBAAAI,EAAA,6DACIJ,EAAEK,iBACE0M,EAAUjB,EACdiB,IACAhB,EAAUgB,GAEJC,EAAW,CACbH,MAAQE,GAPhB,SAU0BnM,MAAM,gBAAD,OAAiB4I,GACxC,CAAI3I,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU+L,KACxB9L,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAjB9B,0DAxFkB,oEA6GlB,WAA6BpB,EAAGmK,EAAKH,GAArC,iBAAA5J,EAAA,yDACIJ,EAAEK,iBACEH,EAAKF,EAAEC,OAAOC,GAEfQ,aAAaR,IAAMA,EAJ1B,gCAKqCU,MAAM,oBAAD,OAAqBoJ,GACvD,CAAInJ,OAAQ,WAGXK,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAT9B,OAKc6L,EALd,OAUQC,QAAQC,IAAIF,GAVpB,OAYI3J,KAZJ,4CA7GkB,oEAsIlB,WAA4BtD,EAAGE,EAAIsI,GAAnC,eAAApI,EAAA,6DACIJ,EAAEK,iBADN,SAEgCO,MAAM,mBAAD,OAAoBV,EAApB,YAA0BsI,GAC3D,CAAI3H,OAAQ,WAGXK,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAN1B,OAEUgM,EAFV,OAOIF,QAAQC,IAAIC,GACZC,OAAOC,SAAS9H,KAAK,aARzB,4CAtIkB,sBAwJlB,OAjIevD,cA4DfoB,qBAAW,WACPC,OACD,IAoEC,yBAAK7B,MAAM,mBACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,oBAAoBH,MAAO,CAACiC,OAAQ,OAAQC,gBAAiB,UAAWC,QAAS,IAAKC,OAAQ,MACrG,wBAAIpC,MAAO,CAACqC,WAAY,OAAQC,YAAa,OAAQrC,MAAM,UAA3D,UAEJ,yBAAKE,MAAM,eACP,yBAAKA,MAAO/B,EAAaF,KAAb,sBAAmCE,EAAaF,MAAS,SAAYmC,KAAK,SACjFjC,EAAaD,UAItB,yBAAKgC,MAAM,qBACP,yBAAKA,MAAM,8BACP,yBAAKA,MAAM,UACP,wBAAIA,MAAM,QAAQgI,EAAS3C,QAE/B,yBAAKrF,MAAM,SAASH,MAAO4K,EAAUC,UACjC,yBAAK1K,MAAM,OACP,yBAAKA,MAAM,YACP,uBAAGH,MAAO,CAACmC,QAAS,MAAOmF,SAAU,SAAS,2BAAIoD,KAEtD,yBAAKvK,MAAM,WAAWH,MAAO,CAACsH,SAAU,SACpC,+BAAO,2BAAIa,EAAS5G,aAExB,yBAAKpB,MAAM,WAAWH,MAAO,CAACsH,SAAU,SACpC,+BAAO,sCAAYgD,KAErBZ,EAAW,kBAAC,EAAD,CAAU1B,WAAYA,GAAYG,SAAUA,EAAUnG,SAAUA,KAAc,yBAAK7B,MAAM,kBAClG,uBAAGA,MAAM,OAAOH,MAAO,CAACsH,SAAU,SAAUa,EAAShK,UAEzD,yBAAKgC,MAAM,kBAKnB,yBAAMA,MAAM,4BACR,yBAAKA,MAAM,6BACP,yBAAKA,MAAM,qBACP,4BAAQH,MAAO4K,EAAUM,IAAKhN,KAAK,SAASuC,QAAS,SAAA/B,IA/LnE,qCA+LyEuN,CAAWvN,KAAK,uBAAGyB,MAAM,qBAAuB,0BAAMA,MAAM,QAAQqK,KAEnI,yBAAKrK,MAAM,qBACP,4BAAQM,QAAS,WAAcrB,aAAaR,GAAKiI,GAAY,GAAQA,GAAY,IAAS7G,MAAO4K,EAAUG,SAA3G,SACEnE,EAAY,kBAAC,EAAD,CAAUoB,WAAYA,GAAYG,SAAUA,EAAUnG,SAAUA,GAAUqG,aAAcA,GAAcvB,aAAcA,KAAkB,IAExJ,yBAAK3G,MAAM,qBACLf,aAAaR,KAAOuJ,EAASjB,QAAgC,cAAtB9H,aAAalB,MAA8C,UAAtBkB,aAAalB,KAAkB,4BAAQuC,QAnDrJ,SAAwB/B,GACpBA,EAAEK,iBACF4K,GAAY,IAiD8J3J,MAAO4K,EAAUG,SAAlD,QAA2E,IAE5L,yBAAK5K,MAAM,qBACLf,aAAaR,KAAOuJ,EAASjB,QAAgC,UAAtB9H,aAAalB,KAAkB,4BAAQuC,QAAU,SAAA/B,GAAC,OAzMzG,gDAyM6GwN,CAAaxN,EAAGyJ,EAAS5C,IAAK4C,EAASjB,SAASlH,MAAO4K,EAAUG,SAAxF,UAAmH,SAenN,yBAAK5K,MAAM,YACP,yBAAKA,MAAM,aACa,IAAvBiK,EAAYjL,OAAeiL,EAAY/E,KAAK,SAACwC,EAAOgB,GAAR,OAAgB,yBAAK1I,MAAM,mCAChE,yBAAKA,MAAM,iBAAiBH,MAAO,CAACuC,OAAO,sBACvC,yBAAKpC,MAAM,OACP,yBAAKA,MAAM,YACP,2BAAI0H,EAAMtG,YAEd,yBAAKpB,MAAM,YACP,2BAAI0H,EAAM/F,KAAKnE,SAK3B,yBAAKwC,MAAM,aACP,yBAAKA,MAAM,MAAMH,MAAO,CAACuC,OAAO,oBAAqBuI,WAAY,YAC7D,yBAAK3K,MAAM,aACP,yBAAKA,MAAM,OAEP,yBAAKA,MAAM,eAGjB+J,EAAStL,IAAMiK,GAAOqB,EAASsB,MAAQ,kBAAC,EAAD,CAAiB5C,YAAaA,GAAaC,IAAKA,EAAKhB,MAAOA,EAAO7F,SAAUA,KAAc,yBAAK7B,MAAM,kBAC1I0H,EAAM1J,SAEX,yBAAKgC,MAAM,aACP,yBAAKA,MAAM,2BACP,4BAAQA,MAAM,OAAOjC,KAAK,SAASU,GAAIiK,EAAKpI,QAAS,SAAA/B,GAAC,OAjL1F,SAAqBA,EAAGmK,GACpBnK,EAAEK,iBACCK,aAAaR,GACZqL,EAAa,CAACrL,GAAIiK,EAAK2C,OAAO,IAG9BvB,EAAa,CAACrL,GAAI,GAAI4M,OAAO,IA2KyDW,CAAYzN,EAAGmK,IAAM7I,MAAO4K,EAAUM,KAAhG,SAAmH,6BAEnH,4BAAQ/K,MAAM,OAAOjC,KAAK,SAASU,GAAIiJ,EAAMX,OAAQzG,QAAS,SAAA/B,GAAC,OAzHnG,SAAmBA,EAAGmK,GAClB,IAAIjK,EAAKF,EAAEC,OAAOC,GACfQ,aAAaR,IAAMA,GAA4B,cAAtBQ,aAAalB,MAA8C,UAAtBkB,aAAalB,KAC1EiM,EAAY,CAACvL,GAAIiK,EAAK2C,OAAO,IAE7BrB,EAAY,CAACvL,GAAI,GAAI4M,OAAO,IAoHmEpC,CAAU1K,EAAGmK,IAAM7I,MAAO4K,EAAUM,KAAvG,QAAyH,6BACzH,4BAAQ/K,MAAM,OAAOjC,KAAK,SAASU,GAAIiJ,EAAMX,OAAQzG,QAAS,SAAA/B,GAAC,OAtPjF,gDAsPqF0N,CAAc1N,EAAGmK,EAAKhB,EAAMtC,MAAMvF,MAAO4K,EAAUM,KAAtH,UAJJ,IAI+I,6BACzIlB,EAAUpL,IAAMiK,GAAOmB,EAAUwB,MAAQ,kBAAC,EAAD,CAAa5C,YAAaA,GAAaC,IAAKA,EAAKR,aAAcA,GAAcvB,aAAcA,GAAce,MAAOA,EAAO7F,SAAUA,KAAc,MAMtM,kBAAC,EAAD,CAAcuG,QAASV,EAAMU,eAE1B,OChPhB8D,MAtBf,SAAoB3G,GAChB,OACI,+BCkFO4G,MAnFf,SAAkB5G,GAAQ,IAAD,EACWhI,mBAAS,IADpB,mBACd6O,EADc,KACJC,EADI,KAErBZ,QAAQC,IAAI,eAAgBnG,EAAM+G,OAElC,IAAIC,EAAQ,YAAQhH,EAAM+G,OAY1B,SAASE,EAAajO,GAClBA,EAAEK,iBAEFyN,EAAY9N,EAAEC,OAAOE,OAnBJ,SAqBN+N,EArBM,8EAqBrB,WAA4BlO,GAA5B,uBAAAI,EAAA,yDACIJ,EAAEK,iBACF6M,QAAQC,IAAInN,EAAEC,QAEE,aAAZ4N,GAAuC,SAAZA,EAJnC,wBAKY3N,EAAKF,EAAEC,OAAOC,GAEdyH,EAAO,CACPpB,SAAUsH,GARtB,SAUmCjN,MAAM,kBAAD,OAAmBV,GACnD,CAAIW,OAAQ,OACRC,QAAS,CACL,OAAU,oCACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU0G,KACxBzG,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UAjB9B,OAUc+M,EAVd,OAkBMjB,QAAQC,IAAIgB,GACZnH,EAAM1D,WAnBZ,WAqBqB,UAAZuK,EArBT,wBAsBY3N,EAAKF,EAAEC,OAAOC,GAtB1B,UAuBoCU,MAAM,mBAAD,OAAoBV,GACrD,CAAIW,OAAQ,WAGXK,MAAM,SAAAC,GAAM,OAAEA,EAAOC,UA3B9B,QAuBcgN,EAvBd,OA4BQlB,QAAQC,IAAIiB,GA5BpB,6CArBqB,sBAsDrB,OAhDAJ,EAASrL,SAAS,SAAAC,GACdA,EAAQyL,aAAe,IAAIvL,KAAKF,EAAQK,WAAWqL,UAAY,IAAIxL,KAAKF,EAAQC,WAAWyL,WAArE,MACtB1L,EAAQyL,YAAcE,KAAKC,MAAM5L,EAAQyL,gBAG7CnB,QAAQC,IAAIa,GA6CR,+BAC6B,IAAvBhH,EAAM+G,MAAMtN,OAAeuG,EAAM+G,MAAMpH,KAAK,SAAA2D,GAAI,OAC9C,4BACI,4BAAMA,EAAKrL,MAGX,4BAAKqL,EAAK+D,aACV,4BAAK/D,EAAK3F,QACV,4BAAK2F,EAAK/D,UACV,4BACI,8BACI,4BAAQ9E,MAAM,wBAAwBvB,GAAG,yBAAyB2B,SAAUoM,GACxE,4BAAQQ,UAAQ,GAAhB,UACA,4BAAQtO,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,WAEJ,2BAAOX,KAAK,SAASU,GAAIoK,EAAKzD,IAAK9E,QAASmM,EAAc5M,MAAO,CAACuC,OAAQ,qBAAqBpC,MAAM,MAAMtB,MAAM,iBAIpH,KCCVuO,MA7Ef,WAA2B,IAAD,EACI1P,mBAAU,IADd,mBACf+O,EADe,KACRY,EADQ,cAGPrL,IAHO,2EAGtB,4BAAAlD,EAAA,sEAC8BQ,MAAM,cAAcM,MAAM,SAAAC,GAAM,OAAIA,EAAOC,UADzE,QACUwN,EADV,QAKgBjM,SAAQ,SAAAC,GAChBA,EAAQC,UAAY,IAAIC,KAAKF,EAAQC,WAAWE,WAAWC,UAAU,EAAG,IACxEJ,EAAQiM,SAAW,IAAI/L,KAAKF,EAAQK,WAAWF,WAAWC,UAAU,EAAG,OAE3E2L,EAASC,GATb,4CAHsB,sBAsCtB,OAXA1B,QAAQC,IAAIY,GAMZ1K,qBAAW,WACPC,MAED,IAGC,yBAAK7B,MAAM,OACP,yBAAKA,MAAM,aACX,yBAAKA,MAAM,mCACH,yBAAKA,MAAM,kBACP,2BAAOA,MAAM,kBACL,+BACI,wBAAIH,MAAO,CAACiC,OAAQ,OAAQM,OAAQ,oBAAqBL,gBAAiB,UAAWC,QAAS,IAAKC,OAAQ,IAAKnC,MAAO,UACnH,wBAAKD,MAAO,CAAEwC,MAAM,QAApB,QAEA,wBAAIxC,MAAO,CAAEwC,MAAO,QAChB,0BAAMrC,MAAM,eACR,2BAAOA,MAAM,YAAYG,IAAI,8BAA7B,eAAsE,6BAAtE,aACA,4BAAQG,QAtBpD,SAA0B/B,GACtBA,EAAEK,mBAqByE,uBAAGoB,MAAM,yBAGpD,wBAAIH,MAAO,CAAEwC,MAAO,QAChB,0BAAMrC,MAAM,eACR,2BAAOA,MAAM,YAAYG,IAAI,8BAA7B,UACA,4BAAQG,QAxCpD,SAA4B/B,GACxBA,EAAEK,iBACFsO,EAAU,IAEX,IAAIG,EAAaf,EAAMgB,MAAM,SAASC,EAAGC,GACpC,OAAOA,EAAEtK,OAASqK,EAAErK,UAGxBgK,EAAS,YAAIG,MAgCgE,uBAAGrN,MAAM,yBAItD,wBAAIH,MAAO,CAAEwC,MAAO,QAApB,aACA,wBAAIxC,MAAO,CAAEwC,MAAO,QAApB,YAGR,kBAAC,EAAD,CAAUiK,MAAOA,EAAOzK,SAAUA,UChDnD4L,MAff,WACI,OACI,yBAAKzN,MAAM,OACP,yBAAKA,MAAM,aACP,8CACG,kBAAC,EAAD,MACA,kBAAC,EAAD,SCwCJ0N,MAjCf,WAGE,OADSzO,aAAaR,GAEpB,yBAAKwB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBAAkBJ,MAAO,CAACoF,UAAW,OAAQjD,QAAS,MAGnE,kBAAC,IAAD,CAAO2L,OAAK,EAACC,KAAM,CAAC,IAAK,aAAcC,UAAWtN,IAElD,kBAAC,IAAD,CAAOoN,OAAK,EAACC,KAAK,UAAUC,UAAWpK,IACvC,kBAAC,IAAD,CAAOkK,OAAK,EAACC,KAAK,gBAAgBC,UAAWvQ,IAC7C,kBAAC,IAAD,CAAOqQ,OAAK,EAACC,KAAK,SAASC,UAAWpL,IACtC,kBAAC,IAAD,CAAOkL,OAAK,EAACC,KAAK,UAAUC,UAAWxK,IACvC,kBAAC,IAAD,CAAOsK,OAAK,EAACC,KAAK,WAAWC,UAAWxJ,IACxC,kBAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,aAAaC,UAAWrH,IAC1C,kBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,WAAWC,UAAWtG,IACxC,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,UAAUC,UAAWrG,IACvC,kBAAC,IAAD,CAAOmG,OAAK,EAACC,KAAK,2BAA2BC,UAAWlE,IACxD,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,SAASC,UAAWJ,IACtC,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,YAAYC,UAAWxJ,KAG3C,kBAAC,EAAD,SChCYyJ,QACW,cAA7BlC,OAAOC,SAASkC,UAEe,UAA7BnC,OAAOC,SAASkC,UAEhBnC,OAAOC,SAASkC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/O,MAAK,SAAAgP,GACJA,EAAaC,gBAEdC,OAAM,SAAAxL,GACLsI,QAAQtI,MAAMA,EAAMnF,c","file":"static/js/main.8a24921d.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Registration(){\r\n    const [ userData, setUserData ] = useState({ name: \"\", email: \"\", password: \"\"});\r\n    const [ isRegistered, setIsRegistered ] = useState( false );\r\n    const [ alertMessage, setAlertMessage ] = useState( { type: \"\", message: \"\"} );\r\n\r\n    const inputEmail = useRef();\r\n    const inputPassword = useRef();\r\n\r\n    function handleInputChange( e ){\r\n        const { id, value } = e.target; \r\n        setUserData( { ...userData, [id]: value } );\r\n    }\r\n\r\n    async function registerUser( e ){\r\n        e.preventDefault();\r\n        \r\n        if( userData.email === \"\" ) {\r\n            inputEmail.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide your Email!' } );\r\n            return;\r\n        }\r\n    \r\n        if( !(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.email)) ) {\r\n            inputEmail.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide a valid Email!' } );\r\n            return;\r\n        }\r\n\r\n        if( userData.password === \"\" ) {\r\n            inputPassword.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide a password!' } );\r\n            return;\r\n        }\r\n\r\n        if( userData.password.length < 8 ) {\r\n            inputPassword.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide a longer password (8 characters min)!' } );\r\n            return;\r\n        }\r\n\r\n        localStorage.clear();\r\n\r\n        const apiResult = await fetch('/api/user/registration', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n          }).then( result=>result.json())       \r\n                  \r\n        if( apiResult.message ){\r\n            setAlertMessage( { type: 'success', message: 'Thank you successfully registered!' } );\r\n            setTimeout( function(){ setIsRegistered(true); }, 1000 );\r\n        } else {\r\n            setAlertMessage( { type: 'danger', message: 'Try again' } );\r\n        }\r\n        setUserData({ name: \"\", email: \"\", password: \"\"})\r\n    }\r\n\r\n    return (\r\n        <div style={{color: \"black\"}}>\r\n            \r\n            { isRegistered ? <Redirect to='/login' /> : '' }\r\n            <section class=\" text-center\">\r\n                <div class=\"container\">\r\n                    <h1>User Registration</h1>\r\n                    <p class=\"lead text-muted\">Register and enjoy your stay at forum!</p>\r\n                </div>\r\n            </section>\r\n            <div className={ alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide' } role=\"alert\">\r\n                {alertMessage.message}\r\n            </div>\r\n        \r\n            <div class=\"container\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                    Register\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <form role=\"form\">\r\n                            <input type='hidden' id='db_id' value='' />\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">First Name</label>\r\n                                <input value={userData.name} onChange={handleInputChange} id='name' type=\"text\" class=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"email\">Email Address</label>\r\n                                <input \r\n                                    value={userData.email} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputEmail}\r\n                                    id=\"email\" type=\"email\" class=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"userPassword\">Password</label>\r\n                                <input \r\n                                    value={userData.password} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputPassword}\r\n                                    id=\"password\" type=\"password\" class=\"form-control\" />\r\n                            </div>\r\n                            <button onClick={registerUser} class=\"btn btn-primary submit\" >Register</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;","import React, {useState, useEffect} from 'react';\r\n// import './Forum/style.css'\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nfunction ForumHome() {\r\n    let location = useLocation();\r\n    const [ walkResult, setWalkResult ] = useState([])\r\n    const [ totalMessages, setTotalMessages ] = useState( '' )\r\n    const[ lastName, setLastName ] = useState ('')\r\n    const[ lastUpdated, setLastUpdated] = useState('')\r\n    // console.log(location)\r\n\r\n    async function loadPage(){\r\n        const apiGetWalk = await fetch('/api/walkdata').then( result => result.json() )\r\n        apiGetWalk.forEach(element => { \r\n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n        });\r\n        let total = 0;\r\n        apiGetWalk.forEach(element => { \r\n            total = total + element.userReply.length;\r\n        });\r\n        setWalkResult( apiGetWalk);\r\n        setTotalMessages(total);\r\n        setLastName( apiGetWalk[0].user.name);\r\n        setLastUpdated( apiGetWalk[0].updatedAt)\r\n\r\n        }\r\n        // console.log(walkResult)\r\n        \r\n        useEffect( function(){\r\n            loadPage();\r\n        }, [] );\r\n    \r\n    return (\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\r\n                </div>\r\n                <div class=\"col-lg-12 mx-auto\">\r\n                    <h2 class=\"my-4\">Welcome To The Poems Forum!</h2>\r\n                    <p>Emily Dickinson is one of America’s greatest and most original poets of all time.</p>\r\n                </div>\r\n                <div class=\"row ml-2 mt-4\">\r\n                    <div class=\"col-lg-10 mx-auto mt-4\">\r\n                        <div class=\"row py-2\"  style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\r\n                            <div class=\"col-lg-8 my-2\">\r\n                                    <div class=\"row my-auto\" >\r\n                                        <div class=\"col-lg-2 mt-4\">\r\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i> </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-10 mt-2\">\r\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Poems by Emily Dickinson</h3></Link>\r\n                                            <p class=\"ml-3\">Emily Dickinson is one of America’s greatest and most original poets of all time.</p>\r\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">{walkResult.length}</span><b>Messages</b><span class=\"px-2\">{totalMessages}</span></p>\r\n                                        </div>\r\n                                    </div>     \r\n                            </div>          \r\n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\r\n                                <div class=\"row my-auto\"   >\r\n                                    <div class=\"col-lg-12 ml-3 mt-4\">\r\n                                        <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                    <div class=\"col-lg-10 mx-auto\">\r\n                        <div class=\"row py-2\" style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\r\n                            <div class=\"col-lg-8 my-2\">\r\n                                    <div class=\"row my-auto\" >\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i> </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-10  mt-2\">\r\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Life of Emily Dickinson</h3></Link>\r\n                                            <p class=\"ml-3\">Emily Dickinson is one of America’s greatest and most original poets of all time. </p>\r\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">10</span><b>Messages</b><span class=\"px-2\">10</span></p>\r\n                                        </div>\r\n                                    </div>     \r\n                            </div>          \r\n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\r\n                                <div class=\"row my-auto\">\r\n                                    <div class=\"col-lg-12  ml-3 mt-4\">\r\n                                    <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                    <div class=\"col-lg-10 mx-auto\">\r\n                        <div class=\"row py-2\" style={{backgroundColor: \"#90ee90\", border: \"1px solid #4ee44e\"}}>\r\n                            <div class=\"col-lg-8 my-2\">\r\n                                    <div class=\"row my-auto\" >\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"mt-4\" style={{width: \"80px\", margin: \"0 auto\"}}><i class=\"fas fa-envelope-open-text fa-5x\"></i></div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-10\">\r\n                                        <Link to=\"/the-walks\" className=\"nav-link\" ><h3>Movie</h3></Link>\r\n                                            <p class=\"ml-3\">Emily Dickinson is one of America’s greatest and most original poets of all time.</p>\r\n                                            <p class=\"ml-3\"><b>Discussions</b><span class=\"px-2\">10</span><b>Messages</b><span class=\"px-2\">10</span></p>\r\n                                        </div>\r\n                                    </div>     \r\n                            </div>          \r\n                            <div class=\"col-lg-4 my-2\" style={{borderLeft: \"2px solid #9f6934\"}}>\r\n                                <div class=\"row my-auto\">\r\n                                    <div class=\"col-lg-12  ml-3 mt-4\">\r\n                                    <p><b>Latest by:</b><span class=\"px-2\">{lastName}</span><b></b><span class=\"px-2\">{lastUpdated}</span></p>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForumHome\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nexport const UserContext = React.createContext();\r\n\r\nfunction LoginPage(){\r\n    // DECLARATIVE FORM OF PROGRAMMING\r\n    const [ userData, setUserData ] = useState({ name: \"\", email: localStorage.email, password: \"\", rememberMe: true });\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\r\n    const [ alertMessage, setAlertMessage ] = useState( { type: \"\", message: \"\"} );\r\n    const [ img, setImg ] = useState( '' );\r\n    const [ name, setName ] = useState( '' );\r\n\r\n    const inputEmail = useRef();\r\n    const inputPassword = useRef();\r\n\r\n    function handleInputChange( e ){\r\n        const { id, value } = e.target;\r\n        setUserData( { ...userData, [id]: value } );\r\n    }\r\n\r\n    function handleCheckbox(){\r\n        setUserData( { ...userData, rememberMe: !userData.rememberMe } );\r\n    }\r\n\r\n    async function loginUser( e ){\r\n        e.preventDefault();\r\n        setUserData({ name: \"\", email: localStorage.email, password: \"\", rememberMe: true })\r\n        \r\n        if( userData.email === \"\" ) {\r\n            inputEmail.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide your Email!' } );\r\n            return;\r\n        }\r\n    \r\n        if( userData.password === \"\" || userData.password.length < 8 ) {\r\n            inputPassword.current.focus();\r\n            setAlertMessage( { type: 'danger', message: 'Please provide your password!' } );\r\n            return;\r\n        }\r\n\r\n        const apiResult = await fetch('/api/user/login', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            }).then( result=>result.json())\r\n            // console.log(apiResult)\r\n            setImg(apiResult.img);  \r\n            setName(apiResult.name);  \r\n            localStorage.setItem(\"email\", apiResult.email);\r\n            localStorage.setItem('id', apiResult.id);\r\n            localStorage.setItem('name', apiResult.name);\r\n            localStorage.setItem('points', apiResult.points)\r\n            localStorage.setItem('type', apiResult.type)\r\n                  \r\n        if( !apiResult.message ){\r\n            setAlertMessage( { type: 'danger', message: apiResult.error } );\r\n            return;\r\n        };\r\n\r\n        setAlertMessage( { type: 'success', message: 'Loading, please wait...' } );\r\n        localStorage.email = ( apiResult.rememberMe ? apiResult.email : '' );\r\n        setTimeout( function(){ setIsLoggedIn(true); }, 1000 );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {/* <UserContext.Provider value ={{name, img}}>\r\n            <Router>\r\n                <Route exact path=\"/the-walks\" component={TheWalks} />\r\n            </Router>\r\n        </UserContext.Provider> */}\r\n        <div style={{color: \"black\"}}>\r\n            { isLoggedIn ? <Redirect to='/' /> : '' }\r\n\r\n            <div className={ alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide' } role=\"alert\">\r\n                {alertMessage.message}\r\n            </div>\r\n            <section class=\"text-center\">\r\n                <div class=\"container\">\r\n                    <h1>Login</h1>\r\n                    <p class=\"lead text-muted\">Welcome back!</p>\r\n                </div>\r\n            </section>\r\n        \r\n            <div class=\"container\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form role=\"form\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"userEmail\">Email Address</label>\r\n                                <input \r\n                                    value={userData.email} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputEmail}\r\n                                    id=\"email\" type=\"email\" class=\"form-control\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"userPassword\">Password</label>\r\n                                <input \r\n                                    value={userData.password} \r\n                                    onChange={handleInputChange} \r\n                                    ref={inputPassword}\r\n                                    id=\"password\" type=\"password\" class=\"form-control\" />\r\n                            </div>\r\n                            <button onClick={loginUser} type=\"button\" class=\"btn btn-primary submit\">Login</button>\r\n                            &nbsp; \r\n                            <input type=\"checkbox\" checked={userData.rememberMe} onChange={handleCheckbox} />                        \r\n                            <label class='text-secondary' for='rememberMe'>Remember Me</label> &nbsp;\r\n                            <Link to=\"/registration\">Need to Register?</Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction LogoutPage(){\r\n    const [ isLoggedOut, setIsLoggedOut ] = useState( false );\r\n\r\n    useEffect( function(){\r\n        // attempt to request logout (only once)\r\n        logoutRequest();\r\n    }, [] );\r\n\r\n    // call the api to logout (and clear session)\r\n    async function logoutRequest(){\r\n        localStorage.id = \"\";\r\n        setTimeout( function(){ setIsLoggedOut(true); }, 1000 );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            { isLoggedOut ? <Redirect to='/login' /> : '' }\r\n            <section class=\"jumbotron text-center\">\r\n                <div class=\"container\">\r\n                    <p class=\"lead text-muted\">Please wait, logging out...</p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutPage;","import React from 'react'\r\n\r\nfunction Search() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState} from 'react'\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n    const location = useLocation();\r\n    const [isShown, setShown] = useState(false);\r\n    let showClass = !isShown ? `collapse navbar-collapse`: `collapse navbar-collapse show`;\r\n\r\n    let id = localStorage.id\r\n    let userName = localStorage.name;\r\n    let email = localStorage.email;\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link to=\"/\" className=\"navbar-brand\" href=\"#\">Emily <i class=\"fas fa-book-reader\"></i> Dickinson</Link>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" onClick={()=>setShown(!isShown)}>\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                 <div className={showClass} id=\"navbarNav\"> \r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\" >Home</Link>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link to=\"/forum\" className=\"nav-link\" href=\"#\">Forum</Link>\r\n                    </li> */}\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link to=\"/search\" className=\"nav-link\" href=\"#\">Search</Link>\r\n                    </li> */}\r\n                    { !localStorage.id ?\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/registration\" className=\"nav-link\" href=\"#\">Register</Link>\r\n                    </li> : ''}\r\n                    { email == \"april@test.com\" ?\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin\" className=\"nav-link\" href=\"#\">Admin</Link>\r\n                    </li> : ''}\r\n                    { !id ? \r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\" href=\"#\">Login</Link>\r\n                    </li> : \r\n                    <li className=\"nav-item\">\r\n                    <Link to={`/user/${id}`} className=\"nav-link\" href=\"#\">Dashboard</Link>\r\n                    </li>}    \r\n\r\n                    {id ? \r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/logout\" className=\"nav-link\" href=\"#\">Logout</Link>\r\n                    </li>: ''}                        \r\n            \r\n                    {/* <li className=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <span class=\"mr-1\"><i class=\"fas fa-user\"></i></span> {`${userName}`}\r\n                    </a>\r\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <Link to={`/user/${id}`} className=\"nav-link\" href=\"#\">Dashboard</Link>\r\n                            <div class=\"dropdown-divider\"></div>\r\n                            <Link to=\"/logout\" className=\"nav-link\" href=\"#\">Logout</Link>\r\n                        </div>\r\n                    </li>} */}\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link, useParams, useLocation} from 'react-router-dom';\r\n\r\n\r\nfunction Dashboard() {\r\n    const [ userData, setUserData] = useState('');\r\n    const[ createdAt, setCreatedAt] = useState('');\r\n    const[ updatedAt, setUpdatedAt] = useState('');\r\n    const[ userPosts, setUserPosts] = useState([]);\r\n\r\n    let id = localStorage.id;\r\n\r\n    useEffect( function(){\r\n        loadPage();\r\n    }, [] );\r\n\r\n    async function loadPage(){\r\n        const apiUserData = await fetch(`/api/userdata/${id}`).then( result => result.json() )\r\n        \r\n            let created = new Date(apiUserData.createdAt).toString().substring(4, 15) \r\n             \r\n            let updated = new Date(apiUserData.updatedAt).toString().substring(4, 21) \r\n           \r\n        \r\n        setUserData(apiUserData);\r\n        setCreatedAt(created);\r\n        setUpdatedAt(updated);\r\n        setUserPosts(apiUserData.userThreadWalk)\r\n        localStorage.setItem(\"type\", apiUserData.userType)\r\n        localStorage.setItem(\"points\", apiUserData.points)\r\n        \r\n        // console.log(apiUserData)\r\n    }\r\n    // console.log(userData);\r\n    \r\n\r\n\r\n    return (\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 col-md-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Dashboard</h2>\r\n                </div>\r\n                \r\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\r\n                    <div class=\"row justify-content-center mt-4 p-4\" style={{boxShadow: \"5px 3px #9E9E9E\", border: \"1px solid #9f6934\"}}>\r\n                        <div class=\"col-lg-3 col-md-3 mt-2\">\r\n                            <img src={userData.img} style={{minHeight:'70px', height:'180px'}} class=\"img-thumbnail\"/>                        \r\n                        </div>\r\n                        <div class=\"col-lg-7 col-md-7 mt-2\" style={{padding: '0px' }}>\r\n                            <div class=\"row pl-4\">\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Name: </b> {userData.name}                               \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Email: </b> {userData.email}                        \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Points Earned: </b> {userData.points}   \r\n                                        { userData.points < 5 ? <p class=\"ml-2\">(Points should be atleast 5 to create a post)</p> : ''}                     \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                         {userData.points < 5 ? <div><b>Member Type: </b> NewBie</div> : <div><b>Member Type: </b> Member </div>}          \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Joined Date: </b>{createdAt}                     \r\n                                    </div>\r\n                                    <div class=\"col-lg-7 col-md-7 pb-2\" style={{padding: '0px' }}>\r\n                                        <b>Last Active on: </b>{updatedAt}                      \r\n                                    </div>\r\n                            </div>  \r\n                        </div>\r\n                            \r\n\r\n                    </div>\r\n                </div>\r\n                {userPosts.length != 0 ? \r\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-md-12\">\r\n                            <h3>Your Posts</h3>\r\n                        </div>    \r\n                        {userPosts.map( element => <div class=\"col-lg-12\"><Link to={`/the-walks/${element.slug}/${element._id}`}>{element.title}</Link></div>)}\r\n                    </div>    \r\n                    \r\n                </div> :\r\n                <div class=\"col-lg-10 col-md-10 mx-auto mt-4\">\r\n                    <div class=\"col-lg-12 col-md-12\">\r\n                        <h3>No Posts To Show</h3> \r\n                    </div> \r\n                </div>    }   \r\n            </div>  \r\n        </div>      \r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React,{useState} from 'react'\r\n\r\nfunction WalkForm(props) {\r\n    \r\n    const [myThread, setMyThread] = useState( {title: \"\", message: \"\"});\r\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\r\n       \r\n    \r\n    function updateThread(e){\r\n        e.preventDefault();\r\n       let id = e.target.id;\r\n\r\n    //    console.log(id)\r\n       let value = e.target.value;\r\n    //    console.log(value)\r\n       //spread the operator and insert the values\r\n        let newThread =  ({ ...myThread, [id] : value})\r\n        // console.log( newThread );\r\n      \r\n       setMyThread(newThread)\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.submitThread(e)\r\n        let url = myThread.title\r\n        let newURL = url.trim().replace(/\\s/g , \"-\").replace(/\\'/g, \"\");\r\n\r\n        if (myThread.message != ''){\r\n        let walkData = {\r\n            id : localStorage.id,\r\n            data : myThread,\r\n            slug : newURL,\r\n            name: localStorage.name\r\n        }\r\n    \r\n        const apiThread = await fetch('/api/newthread', \r\n            {   method: 'post'\r\n            ,\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(walkData)\r\n          }).then( result=>result.json())   \r\n        \r\n          if(apiThread.message){\r\n              setAlertMessage({type: 'success', message: apiThread.message})\r\n              setTimeout( function(){ setAlertMessage( {} ); }, 1000 );\r\n          } else {\r\n            setAlertMessage({type: 'danger', message: apiThread.message})\r\n            setTimeout( function(){ setAlertMessage({}); }, 1000 );\r\n          }\r\n          props.loadPage();\r\n        } else {\r\n            alert( 'message is empty ')\r\n        }  \r\n    }\r\n\r\n    function handleCancel(e){\r\n        props.submitThread(e) \r\n    }\r\n\r\n\r\n    return (\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class={ alertMessage.type ? `alert alert-${alertMessage.type}` : `d-hide`} role=\"alert\">\r\n                    {alertMessage.message}\r\n                </div>\r\n                <form>\r\n                    <textarea type=\"textarea\" name=\"\" id=\"title\" value={myThread.title} onChange={updateThread} placeholder=\"Title\" cols=\"100\" rows=\"1\" ></textarea><br/>\r\n                    <textarea type=\"textarea\" name=\"\" id=\"message\" value={myThread.message} onChange={updateThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\r\n                    \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Add</button>  \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WalkForm\r\n","import React, {useState, useEffect} from 'react'\r\nimport WalkForm from './WalkForm';\r\nimport { Link, useParams, useLocation} from 'react-router-dom';\r\n\r\n\r\nfunction TheWalks() {\r\n    const location = useLocation();\r\n    const[showForm, setShowForm] = useState(false);\r\n    const [ walkResult, setWalkResult ] = useState([])\r\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\r\n   \r\n    \r\n    function submitThread(e){\r\n        e.preventDefault();\r\n        setShowForm( false );\r\n    }\r\n\r\n    function alertSuccess(msg){\r\n        setAlertMessage({type: 'success', message: msg})\r\n        setTimeout( function(){ setAlertMessage( {} ); }, 2000 );\r\n    }\r\n\r\n    //passing data from child to parent\r\n    function alertFailure(msg){\r\n        setAlertMessage({type: 'danger', message: msg})\r\n        setTimeout( function(){ setAlertMessage({}); }, 2000 );\r\n    }\r\n\r\n    async function loadPage(){\r\n        const apiGetWalk = await fetch('/api/walkdata').then( result => result.json() )\r\n        // console.log(apiGetWalk)\r\n        apiGetWalk.forEach(element => { \r\n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n        });\r\n\r\n        // apiGetWalk.map( element => {\r\n        //     element.userReply = element.userReply.pop();\r\n        //     // console.log(lastReply)\r\n        // }); \r\n        // console.log(apiGetWalk[0].userReply[0])\r\n        // console.log(apiGetWalk[0].lastReply)\r\n\r\n        setWalkResult([...apiGetWalk])\r\n    }\r\n    // console.log(walkResult);\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        let id = localStorage.id;\r\n        let result = walkResult.find( ele => ele.userId === id)\r\n        // console.log('the result is', result)\r\n        if(localStorage.type == \"admin\"){\r\n            setShowForm( true );\r\n        }       \r\n        if( result && result.userInfo[0].points > 5){\r\n            setShowForm( true );\r\n        } if( !localStorage.id ){\r\n            alertFailure('Dear guest, feel free to visit, to participate please register')\r\n        }  \r\n        if(result && result.userInfo[0].points < 5){\r\n            alertFailure('Not Enough Points to Participate in the forum. Check your dashboard.')\r\n        }\r\n        \r\n    }\r\n     \r\n    useEffect( function(){\r\n        loadPage();\r\n    }, [] );\r\n\r\n    // console.log(walkResult)\r\n    // console.log(walkResult._id)\r\n    return (\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\r\n                </div>\r\n                <div class=\"row mx-auto\">\r\n                    <div class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\r\n                        {alertMessage.message}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-12 mx-auto\">\r\n                    <h2 class=\"my-4\">Poems by Emily Dickinson</h2>\r\n                    <p>Like most writers, Emily Dickinson wrote about what she knew and about what intrigued her. </p>\r\n                </div>\r\n                <div class=\"col-lg-10 mx-auto\">\r\n                    <div class=\"row mx-auto justify-content-end\">\r\n                        {/* <button onClick={function(){localStorage.points > 5 ? setShowForm(true) : setShowForm(false); alert('Not enough points to start a new thread')}}>New Thread</button> */}\r\n                        <button onClick={handleSubmit}>New Post</button><br/>\r\n                        {showForm ? <WalkForm submitThread ={submitThread} loadPage={loadPage}/> : ''}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 mx-auto justify-content-end\" style={{border:\"1px solid black\"}}></div>\r\n                        \r\n                    </div>    \r\n\r\n                </div>\r\n                <div class=\"col-lg-10 mx-auto mt-4\"  >                      \r\n                         <div>\r\n                        \r\n                            <table class=\"table table-sm\">\r\n                                <thead>\r\n                                    <tr style={{height: \"50px\", border: \"3px solid #9f6934\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\", color: \"white\"}}>\r\n                                        <th  style={{ width:\"10%\" }}></th>\r\n                                        <th  style={{ width:\"30%\" }}>Title</th>\r\n                                       \r\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Replies</th>\r\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Views</th>\r\n                                        <th class=\"text-center\" style={{ width: \"20%\" }} >Last Activity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                { walkResult.length !== 0 ? walkResult.map( event => <tbody>\r\n                                    <tr style={{ height: '80px', border: \"3px solid #9f6934\" }}>\r\n                                        <td style={{padding: '20px 0 0 20px'}}><i class=\"fas fa-envelope-open-text fa-2x\"></i></td>\r\n                                        <td style={{padding: '10px 0 0 0'}} key={event._id}>\r\n                                            <div style={{fontSize: \"25px\"}}>\r\n                                                <Link to={{ pathname: `/the-walks/${event.slug}/${event._id}`,\r\n                                                                info:{id: event._id}\r\n                                                                \r\n                                                                }}> \r\n                                            <b>{event.title}</b> </Link><br/>\r\n                                            </div>\r\n                                            <div class=\"my-2\">\r\n                                                {event.user.name}<br/>\r\n                                                {event.createdAt}  \r\n                                            </div>\r\n                                        \r\n                                         </td>\r\n                                        \r\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>{event.userReply.length}</td>\r\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>10</td>\r\n                                        <td class=\"text-center\" style={{padding: '20px 0 0 0'}}>\r\n                                            {event.updatedAt}<br/>\r\n                                            {/* {event.userReply.map( el => el.name)}</td> */}\r\n                                            {function() \r\n                                                {event.userReply.pop();\r\n                                                return event.userReply[0].name; }}</td>\r\n                                    </tr>\r\n                                \r\n                                </tbody>) : ''}\r\n                            </table>\r\n                        </div>\r\n                </div>         \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheWalks\r\n","import React from 'react'\r\n\r\nfunction Yapping() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Yapping\r\n","import React from 'react'\r\n\r\nfunction CoolPics() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoolPics\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nfunction PostForm(props) {\r\n    // console.log(props)\r\n    const[ myPost, setMyPost ] = useState( { reply:\"\"} )\r\n    \r\n        \r\n    function updatePost(e){\r\n        e.preventDefault();\r\n        let post = { reply: e.target.value }\r\n        setMyPost(post)\r\n        // console.log(post);\r\n    }\r\n\r\n    async function handleSubmit(e){   \r\n        e.preventDefault();\r\n        props.submitForm(e);    \r\n        let userId = localStorage.id;\r\n\r\n        if( myPost.reply != ''){\r\n\r\n        let postData = {\r\n            name: localStorage.name,\r\n            postId: props.walkPost._id,\r\n            userId: localStorage.id,\r\n            post: myPost\r\n        }\r\n            \r\n        const apiReply = await fetch('/api/reply', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(postData)\r\n          }).then( result=>result.json()) ; \r\n        //   console.log(apiReply.message);\r\n         \r\n            if(apiReply.message){\r\n                props.alertSuccess('Thank You! Your reply posted sucessfully.');\r\n                \r\n            } else {\r\n                props.alertFailure('Try again! Failed to post the message');\r\n            \r\n            }\r\n          props.loadPage();\r\n        }\r\n        else{\r\n            props.alertFailure('Reply is empty');\r\n        }  \r\n    }\r\n\r\n    function handleCancel(e){\r\n        props.submitForm(e);  \r\n    }\r\n    // function handleCancel(e){\r\n    //     e.preventDefault();\r\n    //     props.submitForm();\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            \r\n             <form class=\"mt-2\">\r\n                \r\n                <textarea type=\"textarea\" name=\"\" id=\"message\" value={myPost.reply} onChange={updatePost} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\r\n                \r\n                <button type=\"submit\" onClick={handleSubmit}>Submit</button>  \r\n                <button type=\"submit\" onClick={handleCancel}>Cancel</button>\r\n                {/* <button type=\"submit\" onClick={e => handleCancel}>Cancel</button>  */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n","import React, {useState} from 'react'\r\n\r\nfunction CommentForm(props) {\r\n    const[ addReply, setAddReply] = useState({comment:''})\r\n    // console.log(props.reply)\r\n    // console.log(props.reply._id)\r\n    let replyId = props.reply._id;\r\n    let postId = props.reply.postId;\r\n    // console.log(replyId, postId)\r\n\r\n    async function updateThread(e){\r\n        e.preventDefault();\r\n        let userComment = e.target.value;\r\n        // console.log(userComment);\r\n        setAddReply({comment: userComment})\r\n    }\r\n    // console.log(addReply);\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        props.submitReply(e, props.idx);\r\n\r\n        if( addReply.comment != ''){\r\n        let commentData = {\r\n            postId:postId,\r\n            userId:localStorage.id,\r\n            name: localStorage.name,\r\n            replyId: replyId,\r\n            comment: addReply.comment\r\n        }   \r\n\r\n        const apiReply = await fetch('/api/comment/', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(commentData)\r\n          }).then( result=>result.json())   \r\n        //   console.log(apiReply)\r\n        \r\n        if(apiReply.message){\r\n            props.alertSuccess('Thank You! Your comment posted sucessfully.');\r\n        }else {\r\n            props.alertFailure('Try again! Failed to post the message');   \r\n        }\r\n          //load page after the post submitted to db\r\n          props.loadPage();\r\n        }\r\n        else {\r\n            props.alertFailure('Try again! The comment form is empty')\r\n        }     \r\n    }\r\n    \r\n    function handleCancel(e){\r\n        props.submitReply(e) \r\n    }\r\n\r\n    return (\r\n        \r\n        <div class=\"col-lg-12 mt-4\">\r\n            <div class=\"row justify-content-end\">\r\n                <form>\r\n                \r\n                    <textarea type=\"text\" name=\"\" id=\"message\" value={addReply.comment} onChange={updateThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\"></textarea><br/>\r\n                    \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Add</button> \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button> \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm\r\n","import React, {useState} from 'react'\r\n\r\nfunction CommentArray(props) {\r\n    const [ myArray, setMyArray] = useState('')\r\n    let newComment = ( [{...props.comment}] )\r\n\r\n    // console.log(props.comment.length)\r\n\r\n    return (\r\n        <div>\r\n            { props.comment.length !== 0 ? props.comment.map( item => <div class=\"row justify-content-end\" >\r\n            <div class=\"col-lg-12\" style={{border:'2px solid #9f6934'}}> \r\n                <div class=\"col-lg-12 my-2\">\r\n                    <div><b>{item.commenterName}</b></div>\r\n                    <div></div>\r\n                </div>\r\n                <div class=\"col-lg-12 mb-2\">{item.postcomment}</div>\r\n            </div>\r\n            \r\n        </div>) : ''}\r\n\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default CommentArray\r\n","import React, {useState} from 'react'\r\n\r\n\r\nfunction EditCommentForm(props) {\r\n    // console.log(props.reply)\r\n    const[ editReply, setEditReply ] = useState( {message: props.reply.message} )\r\n\r\n    function handleEdit(e){\r\n        e.preventDefault();\r\n        let userEdit = e.target.value;\r\n        setEditReply( {message: userEdit} );\r\n\r\n    }\r\n    // console.log(editReply)\r\n    \r\n    async function handleEditSubmit(e){\r\n        e.preventDefault();\r\n\r\n    let editReplyData = {\r\n            postId:props.reply.postId,\r\n            userId:props.reply.postId,\r\n            replyId:props.reply._id,\r\n            edited: editReply.message\r\n        } \r\n\r\n        const apiReply = await fetch('/api/editReply', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(editReplyData)\r\n          }).then( result=>result.json())   \r\n\r\n    props.submitReply(e)\r\n    props.loadPage();\r\n    }\r\n    \r\n    function handleEditCancel(e){\r\n        props.submitReply(e)  \r\n    }\r\n\r\n    return (\r\n        <div class=\"col-lg-12 ml-2 mt-4\">\r\n            <div class=\"row\">\r\n                <form>\r\n                    <textarea type=\"text\" name=\"\" id=\"message\" value={editReply.message} onChange={handleEdit} placeholder=\"Your Message\" cols=\"100\" rows=\"5\"></textarea><br/>\r\n                    \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleEditSubmit}>submit</button> \r\n                    <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleEditCancel}>Cancel</button> \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCommentForm\r\n","import React, {useState} from 'react'\r\n\r\nfunction EditPost(props) {\r\n    // console.log(props.walkPost)\r\n    const[ editPost, setEditPost ] = useState( {message:props.walkPost.message}  )\r\n\r\n\r\n    function editThread(e){\r\n        e.preventDefault();\r\n        let postEdit = e.target.value;\r\n        setEditPost( {message: postEdit} );\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        let editPostData = {\r\n            postId:props.walkPost._id,\r\n            userId:props.walkPost.userId,\r\n            edited: editPost.message\r\n        } \r\n\r\n        const apiReply = await fetch('/api/editPost', \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(editPostData)\r\n          }).then( result=>result.json())   \r\n\r\n    props.submitForm(e)\r\n    props.loadPage();\r\n    }\r\n\r\n    function handleCancel(e){\r\n        \r\n        props.submitForm(e)\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <div class=\"col-lg-12 ml-2\">\r\n                <div class=\"row justify-content-center\">\r\n                    {/* <div class={ alertMessage.type ? `alert alert-${alertMessage.type}` : `d-hide`} role=\"alert\">\r\n                        {alertMessage.message}\r\n                    </div> */}\r\n                    <form>\r\n                        \r\n                        <textarea type=\"textarea\" name=\"\" id=\"message\" value={editPost.message} onChange={editThread} placeholder=\"Your Message\" cols=\"100\" rows=\"5\" ></textarea><br/>\r\n                        \r\n                        <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleSubmit}>Submit</button>  \r\n                        <button class=\"btn myBtnPink\" type=\"submit\" onClick={handleCancel}>Cancel</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n","import React, {useState, useEffect, } from 'react'\r\nimport { useLocation, useParams, Redirect, useHistory} from 'react-router-dom';\r\nimport PostForm from './PostForm';\r\nimport CommentForm from './CommentForm';\r\nimport CommentArray from './CommentArray';\r\nimport EditCommentForm from './EditCommentForm';\r\nimport EditPost from './EditPost';\r\n\r\n\r\nfunction Posts(props) {\r\n    const [ walkPost, setWalkPost ] = useState({});\r\n    const [ showForm, setShowForm ] = useState(false);\r\n    const [ replyForm, setReplyForm ] = useState(false);\r\n    const [ editForm, setEditForm ] = useState(false);\r\n    const [ editPost, setEditPost ] = useState(false);\r\n    const[ replyResult, setReplyResult ] = useState( [] )\r\n    const[ numberReply, setNumberReply] = useState()\r\n    const[ myLike, setMyLike ] = useState(0)\r\n    const[ myName, setMyName ] = useState('');\r\n    const [alertMessage, setAlertMessage] = useState( {type: \"\", message: \"\"})\r\n    const pageStyle = {\r\n        mainPost: {boxShadow: \"5px 3px #9E9E9E\", border: \"1px solid #9f6934\", background: \"#90ee90\"},\r\n        mainBtn: {display:\"block\", backgroundColor: 'transparent', border: 'none', color:'#9f6934', fontWeight:'bold'},\r\n        btn: {backgroundColor: 'transparent', border: 'none', display: 'inline', color:'#9f6934', fontWeight:'bold' }\r\n    }\r\n   \r\n    let params = useParams();\r\n    let{ name }=useParams();\r\n    let{ postId } = useParams();\r\n  \r\n    // console.log(name) // console.log(params)\r\n   \r\n    let location = useLocation();\r\n    // let postId = location.info.id;\r\n\r\n    async function loadPage(){\r\n        //get the main post of the page\r\n        const apiGetWalkPost = await fetch(`/api/walkpost/${postId}`).then( result => result.json() )\r\n        // console.log(apiGetWalkPost[0].comment)\r\n        setWalkPost(apiGetWalkPost)\r\n        setMyName(apiGetWalkPost.user.name)\r\n        //get replies for the post\r\n        const apiGetReply = await fetch(`/api/replydata/${postId}`).then( result => result.json() )\r\n        // console.log([apiGetReply[0].comment])\r\n        apiGetReply.forEach(element => { \r\n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n            element.updatedAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n        });\r\n        setReplyResult(apiGetReply)\r\n        let replyArray = apiGetReply.length;\r\n        setNumberReply(replyArray);   \r\n        setMyLike(apiGetWalkPost.likes);     \r\n    }\r\n    // console.log(walkPost);\r\n    // console.log('the reply result is',replyResult)\r\n    //submitForm for the Post reply\r\n\r\n    function submitForm(e){\r\n        e.preventDefault();\r\n        setShowForm(false);\r\n        setEditPost(false);\r\n    }\r\n    \r\n    //passing data from child to parent\r\n    function alertSuccess(msg){\r\n        setAlertMessage({type: 'success', message: msg})\r\n        setTimeout( function(){ setAlertMessage( {} ); }, 1000 );\r\n    }\r\n\r\n    //passing data from child to parent\r\n    function alertFailure(msg){\r\n        setAlertMessage({type: 'danger', message: msg})\r\n        setTimeout( function(){ setAlertMessage({}); }, 1000 );\r\n    }\r\n    //submit form for the comments\r\n    function addBtnReply(e, idx){\r\n        e.preventDefault();\r\n        if(localStorage.id){\r\n            setReplyForm({id: idx, state: true});\r\n        } else \r\n        {\r\n            setReplyForm({id: '', state: false});\r\n        }\r\n  \r\n    }\r\n\r\n    function submitReply(e, idx){\r\n        setReplyForm({id: idx, state: false});\r\n        setEditForm({id: idx, state: false});\r\n        e.preventDefault();\r\n    }\r\n\r\n    useEffect( function(){\r\n        loadPage();\r\n    }, [] );\r\n\r\n    //likes counter\r\n    async function handleLike(e){\r\n        e.preventDefault(); \r\n        let counter = myLike\r\n        counter++;\r\n        setMyLike(counter)\r\n       \r\n        const likeData = {\r\n            likes : counter\r\n        }\r\n       //post likes data in the db\r\n        const apiLike = await fetch(`/api/counter/${postId}`, \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(likeData)\r\n          }).then( result=>result.json());  \r\n        //   console.log(apiLike)\r\n    }\r\n\r\n    async function deleteBtnPost(e, idx, replyId){\r\n        e.preventDefault();\r\n        let id = e.target.id; \r\n        // console.log(id)\r\n        if(localStorage.id == id){\r\n            const apiDeleteReply = await fetch(`/api/deletereply/${replyId}`, \r\n            {   method: 'delete'\r\n                \r\n            })\r\n            .then( result=>result.json()) \r\n            console.log(apiDeleteReply)\r\n        }\r\n        loadPage();\r\n    }\r\n\r\n    function editReply(e, idx){\r\n        let id = e.target.id;\r\n        if(localStorage.id == id || localStorage.type === 'moderator' || localStorage.type === 'admin'){\r\n            setEditForm({id: idx, state: true});\r\n        }else{\r\n            setEditForm({id: '', state: false});\r\n        }\r\n       \r\n    }\r\n\r\n    async function handleDelete(e, id, userId){\r\n        e.preventDefault();\r\n        const apiDeletePost = await fetch(`/api/deletepost/${id}/${userId}`, \r\n        {   method: 'delete'\r\n            \r\n        })\r\n        .then( result=>result.json()); \r\n        console.log(apiDeletePost);\r\n        window.location.href=\"/the-walks\";\r\n\r\n        \r\n    }\r\n\r\n    function handleEditPost(e){\r\n        e.preventDefault();\r\n        setEditPost(true)\r\n    }\r\n   \r\n    return (\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-12 mx-auto\" style={{height: \"50px\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\"}}>\r\n                    <h2 style={{paddingTop: \"10px\", paddingLeft: \"15px\", color:\"white\"}}>Forum</h2>\r\n                </div>\r\n                <div class=\"row mx-auto\">\r\n                    <div class={alertMessage.type ? `alert alert-${alertMessage.type}` : 'd-hide'  } role=\"alert\" >\r\n                        {alertMessage.message}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"col-lg-12 mx-auto\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-10\">\r\n                            <h2 class=\"my-4\">{walkPost.title}</h2>\r\n                        </div>\r\n                        <div class=\"col-10\" style={pageStyle.mainPost}>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-6\">\r\n                                    <p style={{padding: '0px', fontSize: '20px'}}><b>{myName}</b></p>\r\n                                </div>      \r\n                                <div class=\"col-lg-3\" style={{fontSize: '20px'}}>\r\n                                    <small><b>{walkPost.createdAt}</b></small>\r\n                                </div> \r\n                                <div class=\"col-lg-3\" style={{fontSize: '20px'}} >\r\n                                    <small><b>Replies:{numberReply}</b></small>\r\n                                </div> \r\n                                { editPost ? <EditPost submitForm={submitForm} walkPost={walkPost} loadPage={loadPage}/> : <div class=\"col-12 mx-auto\">\r\n                                    <p class=\"my-4\" style={{fontSize: '20px'}}>{walkPost.message}</p>\r\n                                    </div> }\r\n                                <div class=\"col-12 mt-4\">\r\n                                    \r\n                                </div>     \r\n                            </div>\r\n                        </div>\r\n                        <div  class=\"col-lg-10 col-md-10 mt-2\" >\r\n                            <div class=\"row justify-content-start\">\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    <button style={pageStyle.btn} type=\"submit\" onClick={e => {handleLike(e)}}><i class=\"fas fa-thumbs-up\"></i><span class=\"pl-2\">{myLike}</span></button>\r\n                                </div>\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    <button onClick={function () { localStorage.id ? setShowForm(true) : setShowForm(false)}} style={pageStyle.mainBtn}>Reply</button>\r\n                                    { showForm ?  <PostForm submitForm={submitForm} walkPost={walkPost} loadPage={loadPage} alertSuccess={alertSuccess} alertFailure={alertFailure}/> : ''}\r\n                                </div>\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    { localStorage.id === walkPost.userId || localStorage.type === 'moderator' || localStorage.type === 'admin'? <button onClick={handleEditPost} style={pageStyle.mainBtn}>Edit</button> : '' }\r\n                                </div>\r\n                                <div class=\"col-lg-1 col-md-1\">\r\n                                    { localStorage.id === walkPost.userId || localStorage.type === 'admin'? <button onClick={ e => handleDelete(e, walkPost._id, walkPost.userId)} style={pageStyle.mainBtn}>Delete</button> : ''}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* <div class=\"col-10 mx-auto mt-2\" style={{border: \"1px solid #9f6934\"}}>\r\n                            <button style={pageStyle.btn} type=\"submit\" onClick={e => {handleLike(e)}}><i class=\"fas fa-thumbs-up\"></i><span class=\"pl-2\">{myLike}</span></button>\r\n                            <button onClick={() => setShowForm(true)} style={pageStyle.mainBtn}>Reply</button>\r\n                            { showForm ?  <PostForm submitForm={submitForm} walkPost={walkPost} loadPage={loadPage}/> : ''}\r\n                            <button onClick={() => setShowForm(true)} style={pageStyle.mainBtn}>Edit</button>\r\n                            <button onClick={() => setShowForm(false)} style={pageStyle.mainBtn}>Delete</button>\r\n                        </div>     */}\r\n                    </div>    \r\n                </div>    \r\n            </div>\r\n            <div class=\"row mt-4\">\r\n                <div class=\"col-lg-12\">\r\n                {replyResult.length !== 0 ? replyResult.map( (reply, idx) => <div class=\"row justify-content-center my-4\">\r\n                        <div class=\"col-lg-10 py-2\" style={{border:'2px solid #9f6934'}}>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-2\">\r\n                                    <b>{reply.createdAt}</b>\r\n                                </div>   \r\n                                <div class=\"col-lg-2\">\r\n                                    <b>{reply.user.name}</b>\r\n                                </div>     \r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div class=\"col-lg-10\" >\r\n                            <div class=\"row\" style={{border:'1px solid #9f6934', background: '#D2B48C'}}>\r\n                                <div class=\"col-lg-10\">\r\n                                    <div class=\"row\">\r\n                                        {/* <div class=\"col-lg-6\">{reply.user.name}</div> */}\r\n                                        <div class=\"col-lg-4\"></div>\r\n                                    </div>        \r\n                                </div>\r\n                                { editForm.id == idx && editForm.state ? <EditCommentForm submitReply={submitReply} idx={idx} reply={reply} loadPage={loadPage}/> : <div class=\"col-lg-12 my-4\">\r\n                                    {reply.message}\r\n                                </div> }\r\n                                <div class=\"col-lg-12\" >\r\n                                    <div class=\"row justify-content-end\">\r\n                                        <button class=\"pr-4\" type=\"submit\" id={idx} onClick={e => addBtnReply(e, idx)} style={pageStyle.btn}>Reply</button><br/>\r\n                                        {/* { replyForm.id == idx && replyForm.state ? <CommentForm submitReply={submitReply} idx={idx} reply={reply} loadPage={loadPage}/> : ''} */}\r\n                                        <button class=\"pr-4\" type=\"submit\" id={reply.userId} onClick={e => editReply(e, idx)} style={pageStyle.btn}>Edit</button><br/>\r\n                                        <button class=\"pr-4\" type=\"submit\" id={reply.userId} onClick={e => deleteBtnPost(e, idx, reply._id)} style={pageStyle.btn}>Delete</button> <br/>\r\n                                        { replyForm.id == idx && replyForm.state ? <CommentForm submitReply={submitReply} idx={idx} alertSuccess={alertSuccess} alertFailure={alertFailure} reply={reply} loadPage={loadPage}/> : ''}\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> \r\n                            <CommentArray comment={reply.comment} />   \r\n                        </div>\r\n                    </div> ) : ''}\r\n             \r\n                </div>    \r\n            </div>\r\n                        \r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React from 'react'\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <div>\r\n            {/* <form>\r\n                <div class=\"input-group\">\r\n                    <input onChange={handleInputChange} value={searchInput} type=\"text\" class=\"form-control\" placeholder=\"Search your breed\"/>\r\n                    <div class=\"input-group-append\">\r\n                        <button onClick={function(){ props.setResultBreed(searchInput) }} class=\"btn btn-outline-primary\" type=\"button\">Search</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <ul class=\"col-6 list-group\">\r\n                        { showList.map( breed =><li class=\"list-group-item\" onClick={()=>setFormValue(breed)}>{breed}</li> )}\r\n                    </ul>\r\n                </div>\r\n            </form>      */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React, {useState, useEffect} from 'react'\r\n\r\n\r\nfunction TableDiv(props) {\r\n    const[ myOption, setMyOption] = useState('')\r\n    console.log('the props is', props.users)\r\n\r\n    let newUsers = ([...props.users])\r\n    \r\n    newUsers.forEach( element => {\r\n        element.MemberSince = (new Date(element.updatedAt).getTime() - new Date(element.createdAt).getTime())/ ( 1000 * 3600 * 24 )\r\n        element.MemberSince = Math.floor(element.MemberSince)\r\n    \r\n    })\r\n    console.log(newUsers)\r\n    // props.users.forEach( element => {\r\n    //     element.memberSince = ( element.createdAt.getTime() - element.updatedAt.getTime() )/( 1000 * 3600 * 24 )\r\n    // })\r\n\r\n    function handleChange(e){\r\n        e.preventDefault();\r\n        // console.log(e.target.value)\r\n        setMyOption(e.target.value);\r\n    }\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        console.log(e.target)\r\n\r\n        if( myOption == \"moderator\" || myOption == \"admin\" ){\r\n            let id = e.target.id;\r\n            // console.log('the id is', id)\r\n            let data = {\r\n                userType: myOption\r\n            }\r\n            const apiModerator = await fetch(`/api/moderator/${id}`, \r\n            {   method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json, text/plain, */*',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n          }).then( result=>result.json()) \r\n          console.log(apiModerator)\r\n          props.loadPage();\r\n        }\r\n        if ( myOption == \"Delete\" ){\r\n            let id = e.target.id;\r\n            const apiDeleteUser = await fetch(`/api/deleteuser/${id}`, \r\n            {   method: 'delete'\r\n                \r\n            })\r\n            .then( result=>result.json()) \r\n            console.log(apiDeleteUser)\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <tbody>\r\n            { props.users.length !== 0 ? props.users.map( item => \r\n                <tr >\r\n                    <td >{item.name}                                       \r\n                        </td>\r\n                    \r\n                    <td>{item.MemberSince}</td>\r\n                    <td>{item.points}</td>\r\n                    <td>{item.userType}</td>\r\n                    <td>\r\n                        <form>\r\n                            <select class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\" onChange={handleChange}>\r\n                                <option selected>Choose</option>\r\n                                <option value=\"moderator\">Moderator</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                                <option value=\"delete\">Delete</option>\r\n                            </select>\r\n                            <input type=\"submit\" id={item._id} onClick={handleSubmit} style={{border: '1px solid #9f6934'}}class=\"btn\" value=\"submit\"/>\r\n                        </form>                    \r\n                        \r\n                    </td>\r\n                </tr> ): '' }\r\n            \r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default TableDiv\r\n","import React, {useState, useEffect} from 'react'\r\nimport TableDiv from './TableDiv';\r\n\r\n\r\nfunction ModeratorTable() {\r\n    const[ users, setUsers] = useState( [] );\r\n\r\n    async function loadPage(){\r\n        const apiGetUsers = await fetch('/api/users').then( result => result.json() );\r\n        \r\n        // console.log(apiGetUsers);\r\n        // let date = Date(apiGetUsers[1].createdAt).toString().substring(0, 15)\r\n        apiGetUsers.forEach(element => { \r\n            element.createdAt = new Date(element.createdAt).toString().substring(4, 15)   \r\n            element.updateAt = new Date(element.updatedAt).toString().substring(4, 15) \r\n        });\r\n        setUsers(apiGetUsers);\r\n        // console.log(date)\r\n    }\r\n    // console.log('[users]', users);\r\n\r\n    function handlePointsChange(e){\r\n        e.preventDefault();\r\n        setUsers( []);\r\n        // console.log('the empyty array is', users)\r\n       let pointsSort = users.sort( function(x, y) {\r\n            return y.points - x.points\r\n        });\r\n        // console.log('sort array is', pointsSort)\r\n        setUsers([...pointsSort])\r\n    }\r\n    console.log(users);\r\n\r\n    function handleDateChange(e){\r\n        e.preventDefault();\r\n\r\n    }\r\n    useEffect( function(){\r\n        loadPage();\r\n        \r\n    }, [] );\r\n\r\n    return (\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n            <div class=\"row justify-content-center mt-2\">\r\n                    <div class=\"col-lg-10 mt-4\">\r\n                        <table class=\"table table-sm\">\r\n                                <thead>\r\n                                    <tr style={{height: \"50px\", border: \"3px solid #9f6934\", backgroundColor: \"#9f6934\", padding: \"0\", margin: \"0\", color: \"white\"}}>\r\n                                        <th  style={{ width:\"20%\" }}>Name</th>\r\n                                    \r\n                                        <th style={{ width: \"20%\" }} >\r\n                                            <form class=\"form-inline\">\r\n                                                <label class=\"my-1 mr-2\" for=\"inlineFormCustomSelectPref\">Member Since<br/>(in days)</label>\r\n                                                <button onClick={handleDateChange}><i class=\"fas fa-caret-down\"></i></button>\r\n                                            </form>      \r\n                                        </th>\r\n                                        <th style={{ width: \"20%\" }} >\r\n                                            <form class=\"form-inline\">\r\n                                                <label class=\"my-1 mr-2\" for=\"inlineFormCustomSelectPref\">Points</label>\r\n                                                <button onClick={handlePointsChange}><i class=\"fas fa-caret-down\"></i></button>\r\n                                            </form> \r\n                                        \r\n                                        </th>\r\n                                        <th style={{ width: \"20%\" }} >User Type</th>\r\n                                        <th style={{ width: \"20%\" }} >Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <TableDiv users={users} loadPage={loadPage}/>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModeratorTable\r\n","import React from 'react'\r\nimport SearchForm from './SearchForm'\r\nimport ModeratorTable from './ModeratorTable'\r\n\r\n\r\n\r\nfunction Admin() {\r\n    return (\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <h1>The admin page</h1> \r\n                   <SearchForm /> \r\n                   <ModeratorTable/>\r\n            </div>\r\n                \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Registration from './components/Registration/Registration';\nimport Homepage from './components/Homepage/Homepage';\nimport ForumHome from './components/Forum/ForumHome';\nimport LoginPage from './components/Loginout/LoginPage';\nimport LogoutPage from './components/Loginout/LogoutPage';\nimport Search from './components/Search/Search';\nimport Footer from './components/Footer/Footer';\nimport Navbar from './components/Navbar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport TheWalks from './components/Forum/TheWalks';\nimport Yapping from './components/Forum/Yapping';\nimport CoolPics from './components/Forum/CoolPics';\nimport Posts from './components/Posts/Posts';\nimport Admin from './components/Admin/Admin';\n\n\nfunction App() {\n\n  let id = localStorage.id;\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"container-fluid\" style={{minHeight: \"80vh\", padding: \"0\"}}>\n        \n\n          <Route exact path={[\"/\", \"/homepage\"]} component={ForumHome} />\n          {/* <Route exact path={\"/forum\"} component={ForumHome} /> */}\n          <Route exact path=\"/Search\" component={Search} />\n          <Route exact path=\"/registration\" component={Registration} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/logout\" component={LogoutPage} />\n          <Route exact path=\"user/:id\" component={Dashboard} />\n          <Route exact path=\"/the-walks\" component={TheWalks} />\n          <Route exact path=\"/yapping\" component={Yapping} />\n          <Route exact path=\"/treats\" component={CoolPics} />\n          <Route exact path=\"/the-walks/:name/:postId\" component={Posts} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route exact path=\"/user/:id\" component={Dashboard} />\n          {/* <Route exact path=\"/the-walks/:id\" component={Posts} /> */}\n        </div>\n        <Footer />\n\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}